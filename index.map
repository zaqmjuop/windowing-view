{"version":3,"sources":["supportIframeHeight.js","drager.js","indexeddb/store.js","visiteds.js","../../node_modules/is-url/index.js","tool.js","embeddedBody.js","embeddedHeader.js","embedded.js","index.js"],"names":["resetIframeHeight","iframes","$","each","index","element","height","attr","perHeight","match","per","parseInt","cssHeight","parent","css","supportIframeHeight","window","onresize","getMouseButton","event","MouseEvent","isIE","navigator","appName","button","dragCardHeader","card","cardHeaderDrager","find","cardHeader","cardBody","top","offsetTop","cardHeaderMinHeight","cardHeaderLastChild","lastElementChild","cardHeaderLastChildHeight","offsetHeight","cardHeaderLastChildTop","clientY","display","cursor","bindCardHeaderDrager","cards","curtain","addClass","dragHandler","on","stopPropagation","preventDefault","document","insertBefore","off","remove","dragCardLeft","cardLeftDrager","col","parents","container","left","offsetLeft","width","clientWidth","total","offsetWidth","grow","x","clientX","goalWidth","goalPer","goalGrow","bindCardLeftDrager","bindDrager","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","Store","storeName","Error","name","databaseName","database","IDBDatabase","TypeError","version","onclose","isOpen","close","Number","isSafeInteger","openVersion","closeDB","promise","Promise","resolve","reject","request","open","onsuccess","setDB","result","onerror","target","error","onupgradeneeded","tx","transaction","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","objectStore","createIndex","unique","openDB","then","column","option","columnOption","db","store","indexNames","deleteIndex","columns","Array","newColumns","forEach","columnType","push","id","isReady","delete","ids","length","ready","deleteItem","args","isInt","isArray","deleteItems","item","undefined","put","items","setItem","isObj","setItems","get","sortIds","sort","range","bound","getAll","resPromise","includes","idQuery","getItem","getItems","indexName","openIndexName","attrQuery","keys","Object","firstIndex","only","isEqual","key","visiteds","saveVisited","url","log","date","Date","set","init","addColumns","isAliveElement","nodeType","isEnterKey","keyCode","validateURL","formatURL","hasPrefix","format","defaultLoading","holder","icon","append","defaultIframeAction","iframe","tagName","iframeHolder","loading","hasClass","removeClass","defaultIframe","bindEmbeddedBodyIframes","embeddedBody","ReferenceError","embeddedSubmit","submit","inputGroup","input","val","homepage","bindEmbeddedBodySubmits","embedded","submits","bindEmbeddedInput","click","datalist","html","bindEmbeddedBodyInputs","inputs","initEmbeddedBody","bindRefreshButton","buttons","src","bindHomePageButton","initEmbeddedHeader","embeddedHeader","isEmbedded","hasEmbeddedHeader","hasEmbeddedBody","bindEmbeddeds","embeddeds","querySelector"],"mappings":";;;;;;AAAA,IAAMA,oBAAoB,SAApBA,iBAAoB,GAAM;AAC9B,MAAMC,UAAUC,EAAE,QAAF,CAAhB;AACA,MAAI,CAACD,OAAL,EAAc,OAAO,KAAP;AIFhB,AHAA,ADGEA,UAAQE,IAAR,CAAa,UAACC,KAAD,EAAQC,OAAR,EAAoB;AIFnC,AJGI,QAAMC,SAASJ,EAAEG,OAAF,EAAWE,IAAX,CAAgB,QAAhB,KAA6B,EAA5C;AIFJ,AHAA,ADGI,ICHEW,IDGIV,YAAYF,CCHC,MDGMG,GCHvBS,EDGgB,CAAa,OAAb,CAAlB,GCHmB,CAACC,KAAD,EAAW;AGClC,AHAE,ADGE,MCHE,CAACA,CDGC,CAACX,GCHH,IAAWW,EDGb,EAAgB,aCHcC,UAAhC,EAA6C,OAAO,KAAP;AGC/C,AHAE,ADEoB,AGNtB,MFIQC,OAAQC,UAAUC,OAAV,KAAsB,6BAApC;AGCF,AHAE,ADC6B,MCDzBC,SAAS,OAAb;AGCF,AHAE,ADCE,QAAMd,ECDAS,IDCMR,ECDAa,MAAd,CDCuBhB,SAAT,EAAoB,EAApB,CAAZ;AIAJ,AHAI,ADCA,QAAMI,CCDD,CAAL,UDCkBV,EAAEG,OAAF,EAAWQ,MAAX,GAAoBP,MAApB,MAAgCI,MAAM,GAAtC,CAAlB;AIAJ,AHAMc,ACPN,AFQItB,IEREuE,EFQApE,OAAF,ECDW,ADCAS,CERGE,EFQd,CAAe,ECDb,ECPmByD,IFQrB,EAA4B7D,GERd,IAChBI,EFOE,KEPK0D,YADS,IAEhB1D,OAAO2D,eAFS,IAGhB3D,OAAO4D,WAHT;AEQA,AHAM,ACJN,AFKG,GAPD,CEEIC,iBAAiB7D,OAAO6D,cAAP,IACrB7D,OAAO8D,oBADc,IAErB9D,OAAO+D,gBAFT;AEKA,AHAI,ACFJ,AFGE,AGTF,IDMMC,ACNA+F,KFQG,ADCA9K,CCDL,KERa,CHSf,EEHkBe,OAAOgE,UCNA,CDMP,IAClBhE,KCPe,CAAjB,CDOSiE,iBADW,IAElBjE,OAAOkE,aAFT;AEGA,AHAM1D,ADCL,CAZD,cCWgBH,IAAD,GAAS,MAAT,GAAkB,QAA3B;AGCN,AHAM,AERN0J,IDQM5F,KCRG6F,WAAT,GAAuB,UAACC,GAAD,EAAS;ACShC,AHAI,ACAF,AFCF,AGTE,IHSIlK,EGTA,CAACkK,EFQE,CAAL,AERE,IAAS,GDQD7F,ICRQ6F,GAAP,EDQb,AFC0B,EEDH,CCRK,MHSxBlK,EGTJ,EAAuC,OAAO,KAAP,GHSb,GAAM;AIAlC,AHAMS,ACDmB,AFEvBxB,AGTA,MAAMkL,MAAM,EAAEC,CFQD,KERO,GFQhB,CERoBC,IAAJ,EAAR,EAAoBH,QAApB,EAAZ;ACSF,AHAM,ADCJjK,AGTA,SHSOC,AGTA8J,QHSP,CGTgBM,EHSE,CGTX,CAAaH,GAAb,CAAP,MHSwB;AIA1B,AHAI,ACFA,AFGAlL,AGTH,CAJD,ODUQ,CAACyE,SAAD,IAAc,CAACI,cAAf,IAAiC,CAACG,WAAtC,EAAmD,MAAM,IAAIK,KAAJ,CAAU,mBAAV,CAAN;AEGvD,AHAM7D,ACFF,AFGD,AGTHuJ,GHOE,MEDOzF,ACNAgG,IDML,ACNJ,EFQe,CCFC,ACNA,KDMKhG,CDEf,GCFU,GCNM,CDMOF,SAAzB;AEGJ,AHAM,ACFF,AFGH,AGTC,CHIF,KGJM2F,GDMGxF,MCNM+F,IAAT,EDMF,GAAoB,ACNA,CAAtB,EAAyB,OAAO,KAAP,EDMvB;AEGJ,AHbE,ACWE,ACNF,MAAMA,KDMG,ECNIP,EDMX,OCNoBjC,KAAT,GACVnB,IADU,CACL;ACQV,AHAE,ACFC,ACNO,QHSD3H,CCDAwB,EEROuJ,IFQd,KERuBQ,QHShBvL,EGTO,CAAoB,CAAC,MAAD,EAAS,EAAEI,OAAO,KAAT,EAAgBqH,QAAQ,IAAxB,EAAT,CAApB,CAAN;ACSV,AHAC,AETS,CFVV,EESe,EAEVE,GHQuB5G,CGVb,CAEL,YAAM,QHQYA;AIC5B,ADTkBgK,aAASO,IAAT,GAAgB,CAAhB;ACUlB,AHAA,AEVsC,GAFvB,CFYT7J,AEZJ,iBFYqB,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AGCjC,AHAE,AEVA,MFUI,CAACA,EEVE4J,EFUP,EAAW,AEVX,OFUkB,KAAP,CCJL9F,UAAU;AEKlB,AHAE,ACLgB,ACLjB,CAND,KFgBQ7D,mBAAmBzB,EAAEwB,IAAF,EAAQE,IAAR,CAAa,gBAAb,EAA+B,CAA/B,CAAzB;AGCF,AHAE,AEVFmJ,MFUQlJ,GEVCyJ,IAAT,MFUqBpL,EAAEwB,IAAF,EAAQE,IAAR,CAAa,cAAb,EAA6B,CAA7B,CAAnB;AGCF,AHAE,ACNE,MDMIE,ICNA,CAAC0D,MDMUtF,EAAEwB,ACNb,IDMW,ACNE,EDMME,ACNJ4D,IDMJ,CAAa,YAAb,EAA2B,CAA3B,ACNwBC,CDMzC,UCNmB,CAAjB,EAAqD,MAAM,IAAIC,SAAJ,CAAc,WAAd,CAAN;AEOzD,AHAE,ACNE,MDME,CAAC/D,ICNE6D,OCJMuF,CDIX,GAAgBvF,CDMd,IAAqB,CAAC3D,ECNxB,QDME,IAAoC,CAACC,QAAzC,EAAmD,OAAO,KAAP;AGCrD,AHAE,ACNE,MDMIC,KCNC4D,CDMK9D,MCNV,GAAe,EDMMG,GCNDwD,MDMtB,ECNiB,CAAcG,OAA7B;AEOJ,AHAE,ACNE,MDME1D,KCNGuD,QAAL,CAAcI,OAAd,CDMwB,EAA1B,ACN0B,YAAM;AEOlC,AHAE,ACNI,MDME1D,QCNGsD,QAAL,CAAcK,KDMUhE,CCNxB,GAAuB,KAAvB,EDMmCM,gBAAvC;AGCF,AHAE,ACNG,MDMCD,CCRF,kBDQF,EAAyB;AGC3B,AHAI,ACNA,QDMME,KCNCoD,QAAP,eDMkCtD,oBAAoBG,YAAtD;AGCJ,AHAI,ACND,QDMOC,yBAAyBJ,oBAAoBF,SAAnD;AGCJ,AHAIC,0BAAsBG,4BAA4BE,sBAAlD;AGCJ,AHAG;AGCH,AHAE,SAAO,UAACnB,KAAD,EAAW,ICPR;AEQZ,AHAI,ACPA,QDOIb,KCPG,IDOMa,CCPDqE,KDOOjD,GCPZ,IDOM,ACPY,GDOIR,ECPCyD,CDO9B,OCPyB,YAAyBC,WAA3C,IAA2D,KAAKD,QAAL,CAAcM,KAAd,EAAlE;AEQJ,AHAI,ACPD,QDOKxF,SAAS2B,mBAAb,EAAkC;AGCtC,AHAM3B,eAAS,CAAT;AGCN,AHAMJ,QAAE2B,UAAF,EAAcf,GAAd,CAAkB,EAAE0B,SAAS,MAAX,EAAlB;AGCN,AHAK,KAHD,MAGO,gBCRFmD,SAAS;AESlB,AHAMzF,ACTY,QDSV2B,UAAF,EAAcf,GAAd,CAAkB,EAAE0B,SAAS,EAAX,EAAlB;AGCN,AHAK;AGCL,AHAItC,ACVA,MDUE,MAAF,EAAUY,GAAV,CAAc,EAAE2B,QAAQ,UAAV,EAAd;AGCJ,AHAIvC,ACVA,MDUE2B,UAAF,EAAcf,GAAd,CAAkB,EAAER,QAAWA,MAAX,OAAF,EAAlB;AGCJ,AHAI,ACVA,WDUOoB,IAAP;AACD,ACVC,GDDF,OCCMiE,OAAJ,EAAa;ADWhB,ACVK,CDhBN,WCgBU,CAACI,OAAOC,aAAP,CAAqBL,OAArB,CAAL,EAAoC,MAAM,IAAID,SAAJ,CAAc,UAAd,CAAN;AACpC,YAAIC,UAAU,KAAKA,OAAnB,EAA4B,MAAM,IAAID,SAAJ,CAAc,eAAd,CAAN;ADYlC,ACXK,IDWChD,uBAAuB,SAAvBA,oBAAuB,GAAM;AACjC,ACXE,MDWIC,ICXEsD,IDWM/F,EAAE,OAAF,CAAd,ACXuByF,WAAWI,OAAOC,aAAP,CAAqBL,OAArB,CAAX,IAA6CA,UAAU,KAAKA,OAA7D,GAChBA,OADgB,GACN,KAAKA,OADnB;ADYF,ACVE,MDUE,CAAChD,ICVEuD,CDUP,EAAY,ICVV,GDUiB,KAAP;AACZ,ACVE,MDUItD,ICVEuD,MDUQjG,EAAE,ECVA,IAAIkG,CDUN,EAAWvD,ICVT,CAAY,GDUd,CAAoB,MCVLwD,GDUf,CAAhB,GCV8B,EAAUC,MAAV,EAAqB;ADWnDpG,ACVI,IDUFyC,KAAF,EAASxC,CCVCoG,GDUV,CAAc,MCVM9B,IDULrE,KAAD,CCVgBoG,CDUR9E,GCVF,CDUN,ACVqB,EDUJ,KCVS6D,YAApB,EAAkCU,WAAlC,CAAhB;ADWF,ACVEM,AG/CN,QJyDU5E,QCVI8E,SAAR,EDUuBvG,CCVH,CDUKwB,IAAF,EAAQE,IAAR,CAAa,ACVV,gBDUH,EAA+B,CAA/B,CAAzB;AACA,AK1DJ,AGAA,APgDQ,QDUA,CAACD,QCVI+E,KAAL,CAAWH,EDUf,EAAuB,ICVAI,MAAnB;ADWJ,AM3DJ,ALiDQ,IKjDFoH,IN2DIjL,SCVG0C,KDUW/D,EM3DE,CLiDlB,CAAcoE,MAAd,CKjDFkI,ELiDyB,EDUQrM,ECV/B,EDUgB,CAApB,QM3DsB,CAAC4L,QAAD,EAAc;AN4DpCpN,AM3DF,AECF,APgDQmG,MDUF1E,AM3DA,CAAC2L,QAAD,GLiDU,CKjDG,CAACpN,EN2DhB,AM3DkBoN,EN2DEvK,CCVHyC,CDUjB,CAAuB,GM3DP,EAAYiH,CLiDxB,KDUJ,EAAoC,AM3DpB,CAAqB,SN2DAtL,KAAD,EAAW,EM3D/B,CAAlB,EAA4D,MAAM,IAAIkE,KAAJ,CAAU,oCAAV,CAAN;AN4DxDlE,AM3DJ,ALiDK,MKjDC0L,GL6CF,GDcM7J,SM3DW9C,EAAEoN,IN2DnB,IM3DiB,EAAY1L,IAAZ,CAAiB,YAAjB,EAA+B,CAA/B,CAArB;AN4DIT,AK7DN,ACEE,AEAF,APiDMoF,MKjDA,CAACsG,KN2DK5J,ICVE2D,GKjDZ,EAAmB,ELiDf,GDUA,ACVkB,CKjDG,IAAIvB,KAAJ,ALiDFlE,CKjDY,ILiDb,EAAW,OKjDR,CAAN;AN4Df,AO9DN,ADGE,ALgDmCmF,AGlDrC,IAAMkF,EEEEe,IN2DErL,OCXkCC,IKhDrBjB,AFFA,EEEE2M,ALgDyBhG,EDWzB1F,ICXmB,CDWlC,ACX+C2F,AGlDnD0E,KEEiB,ALgDc,CDWD,CM3DG5J,IAAhB,CN2DjB,AM3DsC,EN2DA,AI7DrB,cEEA,EAAuC,CAAvC,CAArB;AN4DM1B,AK9DR,ACGE,AL+CgE,AGlD3C,MEGjB,CAACqM,EL+CD,AGlD6BlM,CJ8DzB6C,QAAF,CM3DN,CN2DkBH,AI9D0B1C,CEGzB,CN2Db,CAAe,IM3DI,CFH2BoL,GEGvBpG,GN2DvB,EAA4BvC,AM3DT,AFHmB,CEGT,IFH8B,CAAhC,IAAqC5C,CJ8DhE,CI9DkEG,MEG/C,CAAN,AFHmD,EAAWQ,MAAX,CAAkB,MAAlB,CAAjD;AJ+DhB,AM3DL,AL+CI0F,AGnDiB,CAAvB,KEIQ8F,SAASnM,CL+CH6G,CK/CKwF,YAAF,EAAgB3K,AL+C3B,GAA0B,CK/Cf,CAAqB,QAArB,AL+CgBT,EK/Ce,CAA/B,CAAf,CL+C8B,EAAW;ADarCjB,AM3DJ,AEHF,APkDQ,MK/CF,CAACmM,CN2DCzJ,KM3DN,EN2DI,AM3DS,EN2DEO,ACZJuD,IK/CQ,CL+Cb,CAAWvF,EK/CMkE,IN2DnB,ACZmBwB,CDYK,AM3DT,CAAU,IL+CZ,CDYb,ACZ0BF,KK/CX,CAAN,AL+CP;ADaH,AOjEL,ADME,AL+CM,AGnDR,IAAM+E,CJwDF,CMpDIsC,QL+CMhH,EK/CI9G,CFJC,CEICoN,CL+CDnM,MAAM0F,CK/CP,AFJZ6E,EEIwB9J,GL+CX,CK/CD,AL+CcqF,CK/CG,GFJhB,OHmDX,YK/CU,CAAhB;AN4DE/G,AKhEJ,ACKE,AL+CM,AGpDW,ICAb8L,ELgEA9I,AM3DA,CAAC8K,EFLsB7M,KJgEzB,AM3DF,AL+CU,CAAC6F,AGpDsB2E,CJgEnB5I,AM3DA,EN2DZ,ACZYmE,CDYG,EKhEI,CDAM,CEKN,IFLwB,CJgE3C,AM3DY,CFLG,CJgEW,AKhExB8E,IJoDO,CAAoB7E,ODYG,CCZvB,CIpDU,AJoDmB,GIpDb,IJoDkB7B,IAAlC,CAAL,EAA8C;ADahDpF,AKhEJ,ACKA8N,AL+CQ,AGrDS,CAAnB,KCCQ/B,ELgEA,EM3DE9L,IN2DJ,AM3DJ,CDLeD,ACKF,CN2DCY,CKhEG,ELgEb,ACZS0E,CDYK,EAAE/C,EKhEL,CCKDrC,CDLYyC,CJoDlB,CAAcuE,EDYM,AM3Df,EAAQ5F,EDLN,CAAoB,GCKtB,CN2DK,CM3Dc,CN2D5B,ICZI,CAAgC,MIpDzB,CJoD8B8D,CIpDS/E,GJoD9C,CIpDO,CAA4C,AJoDR,EAAE8G,IIpDtC,EAAoD,GJoDL,IAAX,EIpDpC,AJoDqDC,EIpDU,CAA/D,CAAf,WJoDmF,IAAhC,EAA3C;ADaJpH,AKhEJ,ACKE,AL+CM8G,MIpDFkF,ELgEAhJ,AM3DEgJ,KDLKhM,EAAE,ACKAA,AL+CJqH,CDYP,CM3Da/F,CN2DD4B,EKhEH,CLgET,CAAgB,AKhEEP,CCKP,EAAUjB,CL+CjB,CAAe,EK/CR,CDLF,ACKiB,CDLC,ELgE3B,AM3DW,CL+Ca0D,CDYKxC,AM3DE,CAApB,CAAb,CL+CM,EAA0B0E,MDY9B,KCZI,CAAsC,IAAtC,EAA4C,IAA5C,EAAkD,EAAEC,GIpD/C,EAA0D,CAA1D,CAAb,CJoDoE,IAAV,EAAlD;ADaJ,AKhEJvH,ACKE,AL+CK,AGrDT,ICCI+L,ADDEL,IEME,CAACM,CDLP,EAAUC,CCKJ,IAAS,CDLf,ACKgBjM,AFNE,CCCDgM,CCKCA,GDLlB,CCKgB,EAAQO,CFNpBb,OEMY,CAAiB,GFNf,CAACX,GAAD,EAAS,GEMX,CAAd,EAA8C,MAAM,IAAI5F,KAAJ,CAAU,aAAV,CAAN;AN4D5CnF,AKhEJ,ACKEA,AEPJA,APsDO,AGrDL,EIDAgD,IFOI1B,AFNA,EJiEE,CKhECyK,AJ6CH,CO/CN,EFOI,AEPQnD,EFOE/F,CDLZ,CCKE,CAAa,AEPjB,CRkEM,AQlEY,ERkEEM,EIjElB,EEME,AFNU,EJiER,AM3DoB,IEPF,AJCJ,IAAIgC,IEMQ,CFNZ,CAAU,cAAV,CAAN;AJkET,AOrEL,AFKC,ACKK,AEPJ,APsDG,AGrDH,CCJF,GEAMgJ,CPgEF,CQ7DE,CAACnL,APsCa,CAAhB,CGrCM,CEME+K,MAAM/N,AEPFwO,CDHG,CDUCrC,MAAF,ECVZgC,ADUsB9N,GEP1B,CFOgB,AFNF0K,CEMiB,AEPF,EJCrB,GGJS,ADUD,CCVEqC,ADUd,AFNiBrC,CIDe,EJC5B,GIDqB,AJCF5B,EGJV,EAAc,KHI/B;AJkEC,AOrED,ADUI,AEPJ,APsDE,AGrDH,CAHD,EJkDE,AI/CA,GGJI,CAACiE,GDUGW,GAAJ,AL+CK9H,EMzDT,ADUa,ECVE,GNyDb,GMzDmB,IAAI2G,cAAJ,qCAA4BQ,QAA5B,CAAN;APsEf,AOrEA,AFKF,ACKQ,AEPN,APsDC,IIpDGlB,EELAkB,GPqEG3K,GM3DG,CAACzC,CN2DX,COrEauL,ADUAS,IAAF,EAAQO,ECVf,GFKsB,EELA,CAAtB,ADUO,CAAiB,GCVGa,EFK3BlB,KCKO,CAAL,CCVkCE,CDUC,MCVV,KAAqB,AFK1B,CAACD,IEL3B,EAA2D,AFKjC,EAAY,IEL2B,IAAIS,cAAJ,CAAsBQ,QAAtB,gDAAN;APsE5D,AOrEC,AFKA,ACKQpN,AEPR,AJCF,CJyCA,GIzCM2L,EGJA,AFKA,CELC3L,AFKAmM,EELEiB,GDUGpB,CDLN,GCKI,AFNQ,CGJX,AFKWG,CCKAxJ,CCVC4J,KFKMH,CDDnBT,CEMI,CCVH,ADUoB,CCVC,GFKV,GDDA,CAACZ,CCCkB,CCK3B,CFNQ,EAAS,ICCzB,EELK,AFKyC,CEL9C,EAA+C,GFKK,GELC,CFKG5F,GELCyH,EFKL,CAAU,WELT,CAAsBQ,GFKvB,CAAN,IELO,uDAAN;AAC/C,AFKA,ACKO,AEPP,AJCA,MCCMf,ADDD,CAACtB,EGJC,ACGA,CJCH,GGJJ,ACGA,CJCe,OCCM/K,ADDC+K,ECCCoB,CDDR,KCCM,ADDS,ECCC5I,MDD/B,CCCqB,CAAkB,ADDE,OAAO,KAAP,ICCpB,EAAoC,CAApC,CAArB;ALiEF,AOrEC,AFKC,ACKMvD,AEPP,AJCC,CGTF,ACEA,GRwEMoD,EKhEA,ADDEwI,CCCDS,GCKGF,MAAF,EAAUtJ,AFNEkI,CJiEC,AKhEnB,CCKM,CDLa,ACKA,CFNGxK,KCCG,ACKnB,AFNY,CJiEd6C,ACbI,AGpDoB,CEMD,EDLE+B,KAAJ,CAAU,GLgEhB,CAAC3D,AM3Da,IN2Dd,CIjED,CJiEW,AIjE7B,kCCCyB,CAAN;ALiEnB,AKhEA,ACKQxB,AEPV,APoDU,AGnDR,MJiEI,AKhEEsM,ADDAT,CJiEDrK,IAAL,CM3DUwK,CN2DC,EIjEKJ,CCCA5L,ACKR,EDLUqM,ACKFG,EN2DE,IIjEH,CJiEJ,EIjEkBzB,EEMrB,CDLQ,ACKY,AFNb,ECCiBrJ,IAAhB,CAAqB,GCK7B,KFNsCqJ,GAA9C,MCCgB,EAAwC,CAAxC,CAAhB;ALiEA,AOrEF,AFKE,ACKO,AEPT,AJCE,IGJIqD,EPqEE/K,AKhEFiJ,GCGE,AFJCT,MAAP,ECCgB,CAAC7L,EAAEsM,GLgEItM,COrEC,CPqECwB,EKhER,ELgEM,AKhEK+K,ELgEG7K,EOrE3B0M,EPqEmB,CAAa,CKhEnB,CAAoB,MAApB,CAAjB,EAA+C,GLgExB,AOrEC,CAAChB,CPqE2B,CAA7B,CAAvB,KOrEwB,EAAc;APsEtC,AOrEAe,AFKEnO,ACKIA,AEPR,APmDI,AGlDH,CALD,KJsEQ2B,AKhEF2K,ICKIH,GCVGiB,AFKT,AJiDO,EIjDIzK,CCKP,EAAUtC,AL4CFmH,CDeKxH,EAAEwB,AOrErB,CDUM,CDLJ,ACKmB,CDLC,AJiDb,CDeU,EAAQE,ACfJ+F,CK5CjB,EDLJ,ACK0BsG,CN2DT,ACfV,CDeuB,ACfJ,CK5CtB,aN2Da,EAA6B,CAA7B,CAAnB;AACA,AOrEA,AFKC,ACKI,AEPP,APkD8B,MDgBtBnM,AOrEAsM,SNqDkC,EDgBvBlO,EAAEwB,GChB0BgF,CDgB5B,AOrEMxG,EPqEE0B,AOrEA0L,ENqDe,CAAW9H,CDgBlC,CAAa,GOrEP,EAAY5D,CNqDK,CAAZ,EMrDL,CAAiB,EPqEvB,EAA2B,CAA3B,CAAjB,OOrEuB,CAAvB;APsEA,AOrEA,AFKA1B,ACKG,AEPL,APiD8B,II/C1BmM,CCNA,CNsEI7I,AOrEF,CAAC4K,ANoDI,CAAP,AGhDK5C,ECCP,ELgEYtL,AKhEFwM,ELgEIhL,IAAF,EAAQ+B,COrEpB,EAAqB,AFKrB,CAAsB,CDDf+H,EJiEK,CAAgB,COrED,CFK3B,GEL+BnG,CPqEnB,EAAwB,CAAxB,CAAZ,AOrE2B,CAAaiI,QAAb,kDAAN;APsErB,AOrEA,AFKA,ACKC,AL0CA,GKzDD,GN0EM5J,EIlEiBgI,CGHhB,IAAP,KPqEkBxL,EAAEsD,CIlEGkI,EJkEL,EAAO7K,MAAP,GAAgB,CAAhB,CAAlB;AACA,AOrED,AFKA,ACKC,CCfF,AFAA,KL0EM,CAAC0C,CInE8BqI,CEQ5B0B,QAAP,IN2DI,CInE+B1B,GJmEZ,CAAC/J,UAApB,IAAkC,CAACC,QAAnC,IAA+C,CAAC0B,GAAhD,IAAuD,CAACE,SAA5D,EAAuE,OAAO,KAAP;AACvE,AM3DD,CA3BD,OFkBkDmI,CJoEzC,UAAC1K,CIpEwC0K,IJoEzC,EAAW;AAChB,AOrEJ,AFKA,IELM0C,AFKA5B,ILgEIhJ,OAAOH,IAAII,CKhEC,EELE,OPqEpB,AKhEE+I,CJ8CM,CMnDN4B,WFKgB,GAAM,CELJ,CAACjB,QAAD,EAAc;APsElC,AOrEFe,AFKA,ACKF,ALyCI,IKzCEH,EDLE7B,ELgEExI,KOrEGyJ,ANmDF,EI9CMpN,CLgECsD,CKhEC,CJ8CHgC,EDkBM1B,COrEpB,IDUyB,CLyChB,CI9CM,EAAcvD,CJ8CF,CDkBzB,EKhEa,CAAmB,ACK9B2N,CLyC4B1I,MI9CjB,EAA4B,AJ8ChB,MI9CZ,EAAoCjF,CCK1B,CAAC+M,EDLX,AJ8CqC7H,CI9CI,KCK/B,EAAc,CDLxB,EAAmD,AJ8CzD,IAA2D,EI9CrD,EAA2D5C,CJ8CD2C,OI9C1D,CAAoE,AJ8Cf,CAAcK,MAAhF,II9Ca,EAAiF,CAAjF,CAAf;ALiEE,AOrEF,AFKA3F,ACKA,ALyCC,II9CCmM,EELIQ,ADUF,CAACS,CN2DGvJ,EKhER,EAAUhB,EAAV,CAAa,ACKT,CN2DYW,GM3DC,CAACxD,CCVGA,AFKrB,CCKoBoN,CCVGA,AFKF,GLgEKtJ,IM3DR,CCVG,CDUSyI,CCVG7K,EFKN,ELgEzB,AOrEmB,CAAiB,EDUpB,CAAqB,QCVlB,CAArB,SDUkB,CAAlB,EAA4D,MAAM,IAAIyD,KAAJ,CAAU,uDAAV,CAAN;AN4D1D,AOrEF,AFKE+G,ACKF,MCVI,ADUES,CCVDA,CPqEGnM,MAAMmD,KOrEd,EAAmB,ADUE3D,CN2DC6D,CM3DCuJ,CDLDjB,GLgEpB,AOrEuB,GFKvB,CEL2BhH,ADUR,EAAYzD,GCVR,CAAa0L,ADUjB,CAAiB,OCVb,KDUJ,EAA+B,CAA/B,CAArB,uCCVmB;APsEjB,AOrEF,AFKC,ACKD,GDPA,GCOI,CAACT,CN2DG5I,COrED,IAAP,EPqEe/D,EAAEsD,EM3DjB,CN2De,CM3DI,CN2DG1C,GAAP,CAAW,CM3DD,IAAIuE,KAAJ,CN2DV,AM3DoB,CN2DjC,YM3DuB,CAAN;AN4DjB,AOrEH,AFKC,ACKA,CCfF,KDeQ+H,EN2DElJ,CKhEDmI,GLgEKlL,GKhEZ,ECKiBjB,CN2DCiE,CM3DC0I,MN2DP,GAAgBnJ,ECnBlBkE,CKxCO,EAAgBhG,IAAhB,CN2DqBgC,AM3DA,ALwCpBiE,QAAQ,EDmBxB,CM3De,EAAkC,CAAlC,CAAjB;AN4DE,AKhEH,ACKC,ALuC0B,CIlD5B,KCWM,CAACuF,CN2DGhJ,OM3DR,EAAe,GN2DMT,GM3DA,IN2DOE,AM3DHwB,KN2DL,AM3DC,CAAU,EN2DMnB,CAAnC,SM3DmB,CAAN;AN4Db,AOrEJ,ADUE,ICVIsK,EDUEjC,EN2DElI,UAAUD,EOrEE,CDUClE,EAAE2M,MCVnB2B,CPqE0BzK,KAA5B,AM3DmB,EAAgBnC,IAAhB,CCVD,ADUsB,GCVhB,aDUL,EAAuC,CAAvC,CAArB;AN4DE,AOrEF,AFKF,ACKE,ALsCE,II3CEgL,EELE6B,ADUF,CAAClC,CN2DGjI,UOrEUpE,CPqEEmE,AM3DpB,CCVoB,CDUD,MAAM,EN2DK3D,CKhEA,CCKD2E,CN2DV,GAAkBpB,CM3DZ,CAAU,EN2DjC,AOrEgB,AFKd2I,CELJ,cDUyB,CAAN,ODLW,CAACC,YAAD,EAAkB;ALiE9C3M,AOrEF,AFKA,ACKA,ALsCE,MDqBEsD,AOrEA,AFKA,ACKEwK,CCVDS,AFKA5B,ELgEH,EAAO/L,GAAP,CAAW,COrEb,ADUgBZ,ECVA,ADUEoN,CDLd,IAAiB,CAACpN,CELC,CPqErB,AKhEsB2M,ACKR,EN2DUvI,AM3DE1C,ECVZ,EDUA,CAAiB,GN2D/B,EKhEoB,EAAgB6K,QAAhB,CAAyB,OCK/B,CAAhB,GDLsB,CAAtB,EAA6D,MAAM,IAAIK,cAAJ,CAAmB,4DAAnB,CAAN;ALiE3D5M,AOrEFA,AFKA,ACKA,ALsCE,IMhDAuO,EPqEE,AKhEExO,ACKF,CAAC+N,KN2DH,COrEF,CPqEYlN,AM3DZ,CCVaX,CFKGD,ACKF,CN2DZ,CAAc,AKhEE2M,CELlB,CPqEkBpK,AOrEA,GDUG,KN2DK,AM3DZ,ECVKrC,AFKH,EAAgBwB,GELd,CFKF,CELU0L,AFKW,CLgErB,EAAd,KOrEgB,AFKF,CAAhB,CELuC;APsErC,AOrEApN,AFKF,ACKA8N,ALsCE,MMhDEV,AFKA,CAACrN,GCKGE,ALsCF,CDqBGuB,ACrBFkG,GMhDL,AFKF,ACKA,CN2DE,AM3DW,CCVCrH,AFKA,CJ2CR,GMhDJ,CAAiB,ANgDD,CI3CE,GELlB,ADUYH,CDLUiF,EJ2CCuC,EKtCZ,CDLO,CAAU,ACKTpG,ELsCH,IKtCL,CLsCuB,CKtCJ,CCVKpB,KAAnC,CNgDA,EAA6C,MAAM,IAAIsF,SAAJ,CAAc,II3C/C,CAAN,UJ2CuC,CAAN;ADsB9C,AOrEC,AFKFzF,ACKEC,ALsCA,GDQF,GM9CIsB,IDLIrB,AJ2CF0H,EKtCJ,EDLF,ACKY9E,CDLC,CCKX,CAAa,GLsCE,IKtCf,CDLY3C,CCKU,ELsCAyH,EI3CX,EELMyF,AFKEjB,EJ2CJ,II3CJ,ACKiB,ECV5B,AFK8B,mCJ2CRxE,MAAP,OAAkB,QAAjC,EAA4C,MAAM,IAAInC,SAAJ,CAAc,YAAd,CAAN;ADsB/C,AOrEG,AFKAxF,ACKE,ALsCF,CDDJ,KK1CMmM,ICKI,ALsCAvE,CKtCC5H,CDLP,CCKSqM,CDLCxJ,EAAV,CAAa,MAAb,EAAqB,ACKd,ALsCc,EKtCE0J,ALsCvB,OMhDmBa,CDUZ,CAAyB,CDLL,KEL3B,ADUO,CAAL,EAAuC;ACT1C,AFKGlB,ACIyClM,ALuC3C4H,GMpDF,ODa+CyE,SLuChC9E,GKvC8B,EAAgB5E,CLuC3D,CI3CsBwJ,EJ2CAxE,II3CpB,ACIyC,CAAyB,KLuCpCA,CKvCW,MLuCJJ,MAAvC;ADsBJ,AOrEE,AFKG,ACG6E,ALwC9E,IDqBElD,CKlEF,IEHKkK,CNgDCxI,QMhDR,MNgDsB,CDqBG,ICrBEN,KDqBvBpB,ECrBkB,GAAe,CAAnC,YDqBuB,GAAM;AAC/B,AOrED,AFKE,ACGGrE,ALwCF,CMzDJ,EFUE,GLoEMyC,EM7DAyK,GLwCClH,GDqBOhG,EAAE,AM7DZ,EAAYwM,ALwCd,KDqBY,CAAd,KM7DI,CAAwB,MAAxB;AN8DJ,AKhEA,ACGG,ALwCD,KK3CA,CNgEE,CAAC/J,EKhEEkK,CJ2CC1G,EDqBR,EAAY,MCrBM,CDqBC,AKhEnB,GJ2CsBC,EDqBV,KCrBM,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;ADsBnD,AKhED,ACGE,ALwCG,CIrDN,ECQE,GNkEM1D,MCrBI2D,IDqBMrG,EAAE,AOrELsO,INgDO/J,GDqBJ,EAAW5B,KCrBG2D,GDqBd,CAAoB,ACrBhB,CAAe,OAAKjB,CDqBxB,CAAhB,UCrBoB,EAAkCU,WAAlC,CAAhB;ADsBJ/F,AM7DA,ALwCIqG,IDqBF5D,IOrEK0L,CPqEP,AM7DOf,EN6DEnN,IAAT,CAAc,ACrBFsG,CKxCZ,ICRO4H,INgDH,CDqBWjO,ECrBS,GDqBV,EAAQsB,IAAR,EAAiB,CCrBD;ADsB5B,AKhEJ,ACGC,ALwCO,CKzDR,GDcMqL,ILgEIxJ,AOtEW+K,SNiDR5H,II3CU,CJ2Cf,CAAWH,EDqBQrG,EAAEwB,COtER4M,EFMfvB,CLgEqB,ACrBApG,EDqBQ/E,IAAR,ACrBnB,CDqBgC,MKhEjB,CAACoL,MAAD,CLgEI,CKhEQ,CLgEqB,CAA7B,CAAvB;AACA,AKhEF,AJ2CM,MI3CF,CAACA,CLgEC,AOvEgCuB,CPuE/BhL,IKhEP,EAAa,EJ2CFiC,II3CQ,ELgEjB,EAAqB,AKhEAH,AJ2CjB,CMlDgCkJ,ANkDlB1I,II3CD,CAAU,CJ2CvB,GAAuB,IAAvB,eI3Ca,CAAN;ALiEX,AKhEF,ACGF,ALwCQQ,IKxCF8H,IN6DIrL,UCrBM,IDqBQQ,GM7DG,ALwCNkC,QAAb,CKxCF2I,CN6D+BzM,IAAb,CAApB,YM7DuB,CAAC4L,QAAD,EAAc;AN8DrCpN,AKhEF,ACGA,ALwCK,MDqBDqD,AKhEE0J,ACGF,CAACK,ELoCD,MKpCA,IDHepN,ACGF,CN6Df,AM7DgBA,CDHG8M,CLgEDjK,AM7DAuK,EN6DlB,CAAqB,EKhEJ,EAAU7J,CCGX,EAAYgJ,IN6D5B,AKhEiB,CAAkB,CLgED,EM7DlB,CAAqB,ON6DFtL,GKhElB,ELgEiB,AKhEiB,CAAlC,CLgE4B,AKhE/C,ICGkB,CAAlB,EAA4D,MAAM,IAAIkE,KAAJ,CAAU,uDAAV,CAAN;AN8DxDlE,AKhEJ,ACGA,ALwCIoF,MI3CA,ACGE6H,CDHDnB,KLgEKjK,ICrBE4D,CI3CZ,EAAiB,ICGM1G,ALwCnB,EI3CmB,ACGEoN,CLwCH,CDqBlB,EKhEuBjI,ICGJ,CDHA,CAAU,ACGEzD,CLwCZT,GKxCA,CAAiB,CLwClB,EAAW,UKxCV,CAAvB,oBDHuB,CAAN;ALiEbA,AKhEJ,ACGA,ALuCmCmF,MI1C7B4G,ACGF,CAACkB,KN6DKnL,EKhEI/C,EAAE+M,CJ0C0B9L,IKvC1C,EAAqB,ALuC2B0F,GDsB5C,AKhEU,EAAcjF,CCGD,ALuCe,CAAakF,EI1CzC,CAAmB,ACGFzB,ELuCI,GKvCR,CAAU,YDHvB,EAAuC,CAAvC,CAAd,kDCG2B,CAAN;AN8DjB,AKhEJ,ACGA6I,ALsCgE,MIzC5D,CAAChB,EJyCD,CDuBIhM,EKhER,EAAY,MAAM,CCGCoM,GDHGjI,CLgEClE,IKhEL,ACGlB,CN6DQ,AKhEoB,MLgEM,MAA9B,EAAsC,qBKhExB,CAAN;ALiENjB,AKhEN,ACGA6N,ALsCIxH,MIzCE4G,ILgEEjK,EKhEIhD,EAAEgN,EJyCFnG,EDuBN,CKhEM,CLgEMhE,AM7DAuK,CDHGH,CLgEf,CAAe,CKhET,EAAZ,ECGA,GLsCI,GDuBE,ACvBwB,EDuBIrK,QCvBH3B,GDuBzB,ECvBwB,EAAW;ADwBpC,AKhEL,ACGA,ALsCM,MIzCA8J,GCGC,GDHK,CCGZ,CLsCYlD,KAAK5G,MAAM0F,MAAN,CAAaF,GIzCN,GJyClB,kBIzC4BwG,GAAV,CAAZ,8CAAsEA,GAAlF;ALiEIjN,AKhEJ,ACGD,ALsCO,CK7CR,ONoEQ0C,MCvBMoE,CDuBR,EAAW7D,ECvBEhC,EIzCR6J,IJyCcnE,IDuBnB,CAAwB,CCvBX,CIzCjB,AJyC8BI,CIzCTgE,GLgEjB,AKhEJ,OJyCM;ADwBH,AKhEH,AJyCM,KDgBJ,YChBSzF,QAAL,GAAgBuC,EAAhB;ADwBJ7H,AKhEF,AJyCM,MDuBFgD,AKhEE2J,QLgEJ,EAAY9J,CCvBH4C,CDuBT,AM7DWwI,CN6DI,EKhEIjO,EAAE8M,CJyCjB,GAAe,CDuBnB,CKhEmB,CLgEO,CKhEGvJ,GJyCL+B,IIzCL,CAAkB,GLgEL,ACvBb,CAAcG,OAA7B,CIzCe,EAAgC,CAAhC,CAArB;ALiEIzF,AKhEJ,AJyCM,MIzCF,CAAC2M,CLgEC,MAAF,ACvBQ7E,EDuBElH,GAAV,AKhEJ,CLgEkB,CKhEC,CLgEC2B,ACvBCuE,KIzCI,CJyCEA,EDuBC,CKhEC3B,AJyCC6B,KIzCL,CAAU,ELgEjB,EAAd,MCvBuB,CAAoBC,QAApB,CAA6B,OAAK7B,IAAlC,CIzCF,AJyCL,CIzCD,EJ0CT0B,GAAGO,WAAH,CAAe,OAAKjC,IAApB,CADU,GAEVyC,GAAGX,iBAAH,CAAqB,OAAK9B,IAA1B,EAAgC,EAAE+B,SAAS,IAAX,EAAiBC,eAAe,IAAhC,EAAhC,CAFJ;ADwBFpH,AKhEJ,AJ2CM,MI3CAkN,ELgEAlK,MCrBI,CAAC8E,CDqBP,CKhEa9H,CLgEDk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AY;AIvCxB2B,AJwCF,YIxCQjB,AJwCFC,OIxCJ,CAAc,UAACa,EJwCSxB,EIxCV,EAAU,EJwCpB,yCAAoBA,MAApB,CAAN;AIvCI,AJwCJ,YIxCUC,AJwCNU,SIxCerI,EAAE,IJwCF,MIxCA,EAAcK,AJwCjC,EAA6B,EIxCV,CAAmB,OAAnB,EAA4B6I,KAAK6B,GAAjC,CAAf;AACAyC,AJwCFrF,iBIxCW8D,IJwCA3D,EIxCT,CAAgBX,CJwClB,CAAgB,EAAEzH,EIxChB,KJwCuBwH,MAAT,EAAiBH,QAAQ,KAAzB,EAAhB;AIvCC,AJwCF,OI3CC,EJyCF,MAEO,IAAIc,eAAe,QAAnB,EAA6B;AIvClC,AJwCAF,aIxCOkB,KAAP,GJwCWf,IAAX,CAAgB,EAAEpI,OAAOwH,OAAOxH,KAAhB,EAAuBqH,QAAQG,OAAOH,MAAtC,EAAhB;AIvCD,AJwCA,KIjDa,CAAhB,GJ+CS,MAEA;AIvCT,AJwCI,WIxCGtB,KJwCG,EIxCV,EJwCcT,SAAJ,CAAc,SAAd,CAAN;AIvCL,AJwCI,GIpDL;AAaD,AJwCI,CI9DL,MJqDI;AAUA,WAAKQ,OAAL;AIvCJ,AJwCI,IIxCE0H,MJwCI3H,cAAc,KIxCO,AJwCFN,OAAL,EIxClBiI,CJwCiC,CAAnC,oBIxC2B,CAACf,YAAD,EAAkB;AAC/C,AJwCE,MIxCE,CAACA,GJwCG1G,SIxCJ,CJwCc,GIxCG,CAACjG,AJwCAkG,EIxCEyG,KJwCN,CAAY,MIxCR,EAAgBJ,EJwCPpG,MIxCT,CAAyB,AJwCjB,EAAUC,MAAV,EAAqB,CIxC7B,CAAtB,EAA6D,MAAM,IAAIwG,cAAJ,CAAmB,qDAAnB,CAAN;AAC7D,AJwCI,MIxCEe,MJwCItH,GIxCKrG,EAAE2M,KJwCGpI,OIxCL,EAAgB7C,CJwCD4E,GIxCf,CAAqB,AJwChB,CAAe,OAAKjB,UIxCzB,CAAf,CJwCoB,EAAkCU,WAAlC,CAAhB;AIvCJ,AJwCIM,MIxCA,CAACsH,MAAL,EAAa,CJwCDpH,KIxCO,IAAIpB,AJwCnB,GAAoB,EIxCL,CAAU,SJwCC,2BIxCX,CAAN;AACbwI,AJwCM,SIxCC1N,IAAP,CAAY,GJwCDuG,KAAL,CAAWH,CIxCJnG,KAAD,EAAQ8M,AJwCKvG,KIxCb,CJwCN,CIxCwB;AAC5B6G,AJwCI,iBAAKhI,KIxCS0H,GJwCd,CAAcrH,CIxClB,KJwCI,GAAuB,IAAvB;AIvCL,AJwCKQ,GI1CN,eJ0Cc,OAAKb,QAAb;AIvCN,AJwCK,SIxCEqH,AJoCH,YIpCJ;AACD,AJwCKtG,CIhDN,eJgDcK,OAAR,GAAkB,UAACzF,KAAD,EAAW;AAC3B,iBAAKqE,QAAL,GAAgBe,QAAQI,MAAxB;AIvCR,AJwCQ,IIxCFmH,aJwCOnI,MIxCY,CJwCjB,GAAeY,KIxCjBuH,GJwCyBnH,MAAR,CAAehB,MIxCb,CAAC2H,AJwClB,QIxCiB,EAAc;AACrC,AJwCM,MIxCF,CAACA,QAAD,EJwCO9H,EIxCM,CAACtF,EAAEoN,GJwCd,CAAcxH,IIxCF,CJwCZ,CIxCwB2G,QAAZ,CAAqB,kBAArB,CAAlB,EAA4D,MAAM,IAAIK,cAAJ,CAAmB,4DAAnB,CAAN;AAC5D,AJwCMxG,MIxCFuG,WJwCS1L,IIxCMjB,EAAEoN,AJwCFzG,MAAN,CAAaC,CIxCP,EAAYlF,EJwCzB,EIxCa,CAAiB,YAAjB,EAA+B,CAA/B,CAAnB;AACA,AJwCK,MIxCD,GJmCA;AIlCF,AJwCE2E,QIxCE,CAACsG,OJwCK9F,KIxCV,EAAmB,MAAM,EJwCvB,EIxC2B+F,CJwCD,UAAC3L,GIxCJ,CAAmB,CJwChB,EAAW,4BIxCd,CAAN;AACpB,AJwCK,GI1CN,CAEE,OAAO2F,GJwCGiB,EIxCV,EAAc,CJwCC5G,MAAM0F,MAAN,CAAaF,MAAxB;AIvCJ,AJwCI,QIxCAG,MJwCME,KAAK7F,MIxCM2L,AJwCAjG,MAAN,CAAaI,OIxC5B,EAAqC,EJwCjC;AIvCF4F,AJwCE,iBAAKrH,IIxCQtF,EAAE,EJwCf,GAAgB6H,EIxCH,AJwCb,EIxCwBlF,QAAX,CAAoB,oBAApB,CAAf;AACA3C,AJwCE,QIxCAoN,QAAF,CJwCO3H,CIxCKwG,MAAZ,AJwCE,CIxCiBU,EJwCF,OAAKrH,GIxCtB,KJwCiB,CAAcG,OAA7B;AIvCH,AJwCG,cAAMqC,QAAShB,MAAMA,GAAGE,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","file":"index.map","sourceRoot":"../windowing/assets/scripts","sourcesContent":["const resetIframeHeight = () => {\n  const iframes = $('iframe');\n  if (!iframes) return false;\n  iframes.each((index, element) => {\n    const height = $(element).attr('height') || '';\n    const perHeight = height.match(/\\d+%$/);\n    if (!perHeight) { return; }\n    const per = parseInt(perHeight, 10);\n    const cssHeight = $(element).parent().height() * (per / 100);\n    $(element).css('height', `${cssHeight}px`);\n  });\n  return iframes;\n};\n\nconst supportIframeHeight = () => {\n  resetIframeHeight();\n  window.onresize = () => {\n    resetIframeHeight();\n  };\n};\n\nexport { resetIframeHeight, supportIframeHeight };\n","import { resetIframeHeight } from './supportIframeHeight';\n\nconst getMouseButton = (event) => {\n  if (!event || (event instanceof MouseEvent)) return false;\n  const isIE = (navigator.appName === 'Microsoft Internet Explorer');\n  let button = 'right';\n  switch (event.button) {\n    case 0:\n      button = 'left';\n      break;\n    case 1:\n      button = (isIE) ? 'left' : 'middle';\n      break;\n    case 4:\n      button = 'middle';\n      break;\n    default:\n      button = 'right';\n      break;\n  }\n  return button;\n};\n\nconst dragCardHeader = (card) => {\n  if (!card) return false;\n  const cardHeaderDrager = $(card).find('.header-drager')[0];\n  const cardHeader = $(card).find('.card-header')[0];\n  const cardBody = $(card).find('.card-body')[0];\n  if (!cardHeaderDrager || !cardHeader || !cardBody) return false;\n  const top = cardHeader.offsetTop;\n  let cardHeaderMinHeight = 25;\n  const cardHeaderLastChild = cardHeader.lastElementChild;\n  if (cardHeaderLastChild) {\n    const cardHeaderLastChildHeight = cardHeaderLastChild.offsetHeight;\n    const cardHeaderLastChildTop = cardHeaderLastChild.offsetTop;\n    cardHeaderMinHeight = cardHeaderLastChildHeight + cardHeaderLastChildTop;\n  }\n  return (event) => {\n    let height = event.clientY - top;\n    if (height < cardHeaderMinHeight) {\n      height = 0;\n      $(cardHeader).css({ display: 'none' });\n    } else {\n      $(cardHeader).css({ display: '' });\n    }\n    $('body').css({ cursor: 'n-resize' });\n    $(cardHeader).css({ height: `${height}px` });\n    return card;\n  };\n};\n\n\nconst bindCardHeaderDrager = () => {\n  const cards = $('.card');\n  if (!cards) return false;\n  const curtain = $('<div>').addClass('curtain');\n  $(cards).each((index, card) => {\n    const cardHeaderDrager = $(card).find('.header-drager')[0];\n    if (!cardHeaderDrager) return;\n    const dragHandler = dragCardHeader(card);\n    $(cardHeaderDrager).on('mousedown', (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n      if (getMouseButton(event) === 'left') {\n        $(document).on('mousemove', dragHandler);\n      }\n      $(curtain).insertBefore('#app');\n    });\n    $(document).on('mouseup', () => {\n      $('body').css({ cursor: 'default' });\n      $(document).off('mousemove', dragHandler);\n      resetIframeHeight();\n      $('.curtain').remove();\n    });\n  });\n  return cards;\n};\n\nconst dragCardLeft = (card) => {\n  if (!card) return false;\n  const cardLeftDrager = $(card).find('.left-drager')[0];\n  const cardHeader = $(card).find('.card-header')[0];\n  const cardBody = $(card).find('.card-body')[0];\n  const col = $(card).parents('.col')[0];\n  const container = $(col).parent()[0];\n  if (!cardLeftDrager || !cardHeader || !cardBody || !col || !container) return false;\n  return (event) => {\n    const left = col.offsetLeft;\n    const width = col.clientWidth;\n    const total = container.offsetWidth;\n    const per = width / total;\n    const grow = $(col).css('flex-grow');\n    const x = event.clientX - container.offsetLeft;\n    const goalWidth = (left + width) - x;\n    const goalPer = goalWidth / total;\n    const goalGrow = (goalPer / per) * grow;\n    $(col).css('flex-grow', goalGrow);\n    $('body').css({ cursor: 'e-resize' });\n    return card;\n  };\n};\n\nconst bindCardLeftDrager = () => {\n  const cards = $('.card');\n  if (!cards) return false;\n  const curtain = $('<div>').addClass('curtain');\n  $(cards).each((index, card) => {\n    const cardLeftDrager = $(card).find('.left-drager')[0];\n    if (!cardLeftDrager) return;\n    const dragHandler = dragCardLeft(card);\n    $(cardLeftDrager).on('mousedown', (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n      if (getMouseButton(event) === 'left') {\n        $(document).on('mousemove', dragHandler);\n      }\n      $(curtain).insertBefore('#app');\n    });\n    $(document).on('mouseup', () => {\n      $('body').css({ cursor: 'default' });\n      $(document).off('mousemove', dragHandler);\n      resetIframeHeight();\n      $('.curtain').remove();\n    });\n  });\n  return cards;\n};\n\nconst bindDrager = () => {\n  bindCardHeaderDrager();\n  bindCardLeftDrager();\n};\n\nexport default bindDrager;\n","\nconst indexedDB = window.indexedDB ||\n  window.mozIndexedDB ||\n  window.webkitIndexedDB ||\n  window.msIndexedDB;\nconst IDBTransaction = window.IDBTransaction ||\n  window.webkitIDBTransaction ||\n  window.msIDBTransaction;\nconst IDBKeyRange = window.IDBKeyRange ||\n  window.webkitIDBKeyRange ||\n  window.msIDBKeyRange;\n\nclass Store {\n  constructor(storeName) {\n    if (!indexedDB || !IDBTransaction || !IDBKeyRange) throw new Error('您的浏览器不支持indexedDB');\n    this.name = this.name || storeName;\n    this.databaseName = 'myEncapsulation';\n    return this;\n  }\n\n  setDB(database) {\n    if (!database || !(database instanceof IDBDatabase)) throw new TypeError('参数应是数据库对象');\n    this.database = database;\n    this.version = this.database.version;\n    this.database.onclose = () => {\n      this.database.isOpen = false;\n    };\n    return database;\n  }\n\n  closeDB() {\n    return this.database && (this.database instanceof IDBDatabase) && this.database.close();\n  }\n\n  openDB(version) {\n    // openDB()\n    // openDB(version) version是版本号 int类型 例如openDB(99)\n    // 返回值 promise 对象 resolve(this.database) reject(error);\n    if (version) {\n      if (!Number.isSafeInteger(version)) throw new TypeError('版本号只能是整数');\n      if (version < this.version) throw new TypeError('新版本号不能比当前版本号低');\n    }\n    const openVersion = (version && Number.isSafeInteger(version) && (version > this.version))\n      ? version : this.version;\n    this.closeDB();\n    const promise = new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.databaseName, openVersion);\n      request.onsuccess = () => {\n        this.setDB(request.result);\n        this.database.isOpen = true;\n        resolve(this.database);\n      };\n      request.onerror = (event) => { reject(event.target.error); };\n      request.onupgradeneeded = (event) => {\n        this.setDB(event.target.result);\n        const tx = event.target.transaction;\n        if (!tx.objectStoreNames.contains(this.name)) {\n          this.database.createObjectStore(this.name, { keyPath: 'id', autoIncrement: true });\n          tx.objectStore(this.name).createIndex('id', 'id', { unique: true });\n        }\n      };\n    });\n    return promise;\n  }\n\n  ready() {\n    return this.openDB().then(database => this.setDB(database));\n  }\n\n  isReady() {\n    return this.database && (this.database instanceof IDBDatabase) && this.database.isOpen;\n  }\n\n  addColumn(column, option) {\n    // addColumn(columnName) columnName是索引名,String类型,如addColumn('age')\n    // addColumn(columnName, option) option目前只能指定是否去重复,如addColumn('name', { unique: true })\n    // 返回值promise resolve(database) database是示例对象的database属性\n    if (!column || (typeof column !== 'string')) throw new TypeError('索引名称必须存在且为字符串');\n    if (option && (typeof option !== 'object')) throw new TypeError('索引选项应是对象类型');\n    const columnOption = {};\n    columnOption.unique = option && option.unique;\n    const openVersion = this.version + 1;\n    this.closeDB();\n    const promise = new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.databaseName, openVersion);\n      request.onsuccess = () => {\n        this.setDB(request.result);\n        this.database.isOpen = true;\n        resolve(this.database);\n      };\n      request.onerror = (event) => { reject(event.target.error); };\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        const tx = event.target.transaction;\n        this.database = db;\n        this.version = this.database.version;\n        const store = (tx && tx.objectStoreNames.contains(this.name))\n          ? tx.objectStore(this.name)\n          : db.createObjectStore(this.name, { keyPath: 'id', autoIncrement: true });\n        if (!store.indexNames.contains('id')) {\n          store.createIndex('id', 'id', { unique: true });\n        }\n        if (!store.indexNames.contains(column)) {\n          store.createIndex(column, column, { unique: columnOption.unique });\n        }\n      };\n    });\n    return promise;\n  }\n\n  deleteColumn(column) {\n    // deleteColumn(column) columnName是索引名,String类型,如deleteColumn('userName')\n    // 返回值promise resolve(database) database是示例对象的database属性\n    if (!column || (typeof column !== 'string')) throw new TypeError('需要一个字符串类型的索引名');\n    this.closeDB();\n    const openVersion = this.version + 1;\n    const promise = new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.databaseName, openVersion);\n      request.onsuccess = () => {\n        this.setDB(request.result);\n        this.database.isOpen = true;\n        resolve(this.database);\n      };\n      request.onerror = (event) => {\n        this.database = request.result;\n        this.version = request.result.version;\n        this.database.close();\n        reject(event.target.error);\n      };\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        const tx = event.target.transaction;\n        this.database = db;\n        this.version = this.database.version;\n        const store = (tx && tx.objectStoreNames.contains(this.name))\n          ? tx.objectStore(this.name)\n          : db.createObjectStore(this.name, { keyPath: 'id', autoIncrement: true });\n        if (!store.indexNames.contains('id')) {\n          store.createIndex('id', 'id', { unique: true });\n        }\n\n        if (store.indexNames.contains(column)) {\n          store.deleteIndex(column);\n        }\n      };\n    });\n    return promise;\n  }\n\n  addColumns(columns) {\n    // addColumns(['userName'])\n    // addColumns([{ index: 'userAge', unique: false }])\n    // addColumns(['userName', { index: 'userAge', unique: false }])\n    // 返回值promise resolve(database) database是示例对象的database属性\n    if (!columns || !(columns instanceof Array)) throw new TypeError('列名组应该是一个数组');\n    const newColumns = [];\n    columns.forEach((column) => {\n      const columnType = typeof column;\n      if (columnType === 'string') {\n        newColumns.push({ index: column, unique: false });\n      } else if (columnType === 'object') {\n        newColumns.push({ index: column.index, unique: column.unique });\n      } else {\n        throw new TypeError('索引列格式错误');\n      }\n    });\n    this.closeDB();\n    const openVersion = this.version + 1;\n    const promise = new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.databaseName, openVersion);\n      request.onsuccess = () => {\n        this.setDB(request.result);\n        this.database.isOpen = true;\n        resolve(this.database);\n      };\n      request.onerror = (event) => {\n        this.database = request.result;\n        this.version = request.result.version;\n        this.database.close();\n        reject(event.target.error);\n      };\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        const tx = event.target.transaction;\n        this.database = db;\n        this.version = this.database.version;\n        const store = (tx && tx.objectStoreNames.contains(this.name))\n          ? tx.objectStore(this.name)\n          : db.createObjectStore(this.name, { keyPath: 'id', autoIncrement: true });\n        if (!store.indexNames.contains('id')) {\n          store.createIndex('id', 'id', { unique: true });\n        }\n        newColumns.forEach((column) => {\n          if (!store.indexNames.contains(column.index)) {\n            store.createIndex(column.index, column.index, { unique: column.unique });\n          }\n        });\n        this.database = db;\n      };\n    });\n    return promise;\n  }\n\n  deleteColumns(columns) {\n    // demo.deleteColumns(['userName', 'userAge'])\n    // 返回值promise resolve(database) database是示例对象的database属性\n    if (!columns || !(columns instanceof Array)) throw new TypeError('需要一个包含索引名的数组');\n    columns.forEach((column) => {\n      if (!column || (typeof column !== 'string')) throw new TypeError('索引名不是字符串类型');\n    });\n    this.closeDB();\n    const openVersion = this.version + 1;\n    const promise = new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.databaseName, openVersion);\n      request.onsuccess = () => {\n        this.setDB(request.result);\n        this.database.isOpen = true;\n        resolve(this.database);\n      };\n      request.onerror = (event) => {\n        this.database = request.result;\n        this.version = request.result.version;\n        this.database.close();\n        reject(event.target.error);\n      };\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        const tx = event.target.transaction;\n        this.database = db;\n        this.version = this.database.version;\n        const store = (tx && tx.objectStoreNames.contains(this.name))\n          ? tx.objectStore(this.name)\n          : db.createObjectStore(this.name, { keyPath: 'id', autoIncrement: true });\n        if (!store.indexNames.contains('id')) {\n          store.createIndex('id', 'id', { unique: true });\n        }\n        columns.forEach((column) => {\n          if (store.indexNames.contains(column)) {\n            store.deleteIndex(column);\n          }\n        });\n      };\n    });\n    return promise;\n  }\n\n  deleteItem(id) {\n    // deleteItem(id) id是目标数据的id属性值 Integer类型,如deleteItem(1)\n    // 返回值promise resolve(undefined)\n    if (!Number.isSafeInteger(id)) throw new TypeError('参数只能是目标数据的id属性值');\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    const store = this.database.transaction(this.name, 'readwrite').objectStore(this.name);\n    const promise = new Promise((resolve, reject) => {\n      const request = store.delete(id);\n      request.onsuccess = () => { resolve(request.result); };\n      request.onerror = (event) => { reject(event.target.error); };\n    });\n    return promise;\n  }\n\n  deleteItems(ids) {\n    // deleteItems(ids) ids是由id组成的数组 Array类型,如deleteItems([1,2,3])\n    // 返回值promise resolve(undefined)\n    if (!(ids instanceof Array) || (ids.length === 0)) throw new TypeError('参数只能是目标数据的id属性值组成的数组且不能为空');\n    ids.forEach((id) => {\n      if (!Number.isSafeInteger(id)) throw new TypeError('id属性值应是整数');\n    });\n    let promise = this.ready();\n    ids.forEach((id) => {\n      promise = promise.then(() => this.deleteItem(id));\n    });\n    return promise;\n  }\n\n  delete(args) {\n    // delete(id) id是目标数据的id属性值 Integer类型,如delete(1)\n    // delete(ids) ids是由id组成的数组 Array类型,如delete([1,2,3])\n    // 返回值promise resolve(undefined)\n    const isInt = Number.isSafeInteger(args);\n    const isArray = args instanceof Array;\n    if (!isInt && !isArray) throw new TypeError('参数只能是目标数据的id属性值或由id组成的数组');\n    let promise;\n    if (isInt) {\n      promise = this.deleteItem(args);\n    } else if (isArray) {\n      promise = this.deleteItems(args);\n    }\n    return promise;\n  }\n\n  setItem(item) {\n    // setItem(item) item插入的条目, Object类型,如 setItem({ id: 3, name: 'xiaoming', age: 10 })\n    // 使用id属性为主键，可以设置item.id属性值(Integer类型)为插入的主键,若item.id不合法则自动分配id属性\n    // 返回值是promise\n    // resolve() 输出保存后的item.id\n    if (!item || (typeof item !== 'object')) throw new TypeError('参数只能是一个对象');\n    if ((item.id !== undefined) && !Number.isSafeInteger(item.id)) throw new TypeError('参数的id属性只能为整数');\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    const store = this.database.transaction(this.name, 'readwrite').objectStore(this.name);\n    const promise = new Promise((resolve, reject) => {\n      const request = store.put(item);\n      request.onsuccess = () => { resolve(request.result); };\n      request.onerror = (event) => { reject(event.target.error); };\n    });\n    return promise;\n  }\n\n  setItems(items) {\n    // setItems(items) items是由欲插入条目组成的数组，Array类型,如[{id:1, age:12}, {name: 'x', age: 12}]\n    // 返回值是promise\n    // resolve() 输出最后保存的item.id\n    if (!items || !(items instanceof Array)) throw new TypeError('参数应是一个数组');\n    items.forEach((item) => {\n      if (!item || (typeof item !== 'object')) throw new TypeError('参数只能是一个对象');\n    });\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    let promise = this.ready();\n    items.forEach((item) => {\n      promise = promise.then(() => this.setItem(item));\n    });\n    return promise;\n  }\n\n  set(args) {\n    // set(item) 调用setItem(item)\n    // set(items) 调用setItems(items)\n    const isArray = args instanceof Array;\n    const isObj = (typeof args === 'object');\n    if (!isObj && !isArray) throw new TypeError('参数只能是目标数据的id属性值或由id组成的数组');\n    let result;\n    if (isArray) {\n      result = this.setItems(args);\n    } else if (isObj) {\n      result = this.setItem(args);\n    }\n    return result;\n  }\n\n  getItem(id) {\n    // getItem(id) id是目标数据的id属性值 Integer类型,如getItem(1) 拿到id是1的数据\n    // 返回值promise resolve(item) item是结果条目或undefiend\n    if (!Number.isSafeInteger(id)) throw new TypeError('参数只能是目标数据的id属性值');\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    const store = this.database.transaction(this.name, 'readwrite').objectStore(this.name);\n    const promise = new Promise((resolve, reject) => {\n      const request = store.get(id);\n      request.onsuccess = () => { resolve(request.result); };\n      request.onerror = (event) => { reject(event.target.error); };\n    });\n    return promise;\n  }\n\n  getItems(ids) {\n    // getItems(ids) ids是由id组成的数组 Array类型,如getItems([1,2,3])\n    // 返回值promise resolve(items) items是由结果组成的数组\n    if (!(ids instanceof Array) || (ids.length === 0)) throw new TypeError('参数只能是目标数据的id属性值组成的数组且不能为空');\n    ids.forEach((id) => {\n      if (!Number.isSafeInteger(id)) throw new TypeError('id属性值应是整数');\n    });\n    const sortIds = ids.sort();\n    const range = IDBKeyRange.bound(sortIds[0], sortIds[sortIds.length - 1]);\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    const store = this.database.transaction(this.name, 'readwrite').objectStore(this.name);\n    const promise = new Promise((resolve, reject) => {\n      const request = store.getAll(range);\n      request.onsuccess = () => { resolve(request.result); };\n      request.onerror = (event) => { reject(event.target.error); };\n    });\n    const resPromise = promise.then((items) => {\n      const result = [];\n      items.forEach((item) => {\n        if (sortIds.includes(item.id)) {\n          result.push(item);\n        }\n      });\n      return result;\n    });\n    return resPromise;\n  }\n\n  get(idQuery) {\n    // get(id) id是目标数据的id属性值 Integer类型,如get(1) 调用getItem(id)\n    // 返回值promise resolve(item) item是查询结果或undefiend\n    // get(ids) ids是由id组成的数组 Array类型,如get([1,2,3]) 调用getItems(ids)\n    // 返回值promise resolve(items) items是查询结果组成的数组\n    const isInt = Number.isSafeInteger(idQuery);\n    const isArray = idQuery instanceof Array;\n    if (!isInt && !isArray) throw new TypeError('参数只能是目标数据的id属性值或由id组成的数组');\n    let promise;\n    if (isInt) {\n      promise = this.getItem(idQuery);\n    } else if (isArray) {\n      promise = this.getItems(idQuery);\n    }\n    return promise;\n  }\n\n  getAll(indexName) {\n    // getAll(indexName) indexName参数是索引名,如getAll('id')\n    // 返回值promise resolve(items) items是所有存在indexName列的数据组成的数组\n    const openIndexName = indexName || 'id';\n    if (typeof openIndexName !== 'string') throw new TypeError('索引名只能是字符串');\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    const store = this.database.transaction(this.name, 'readwrite').objectStore(this.name);\n    const index = store.index(openIndexName);\n    const promise = new Promise((resolve, reject) => {\n      const request = index.getAll();\n      request.onsuccess = () => { resolve(request.result); };\n      request.onerror = (event) => { reject(event.target.error); };\n    });\n    return promise;\n  }\n\n  findItems(attrQuery) {\n    // findItem(attrQuery) attrQuery是目标条目的属性值,Object类型,如findItem({id: 1, name: 'joy'})\n    // 返回值promise resolve(items) items是符合条件的条目组成的数组\n    if (!attrQuery || (typeof attrQuery !== 'object')) throw new TypeError('参数应该是一个对象');\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    const store = this.database.transaction(this.name, 'readwrite').objectStore(this.name);\n    const keys = Object.keys(attrQuery);\n    const firstIndex = store.index(keys[0]);\n    const range = IDBKeyRange.only(attrQuery[keys[0]]);\n    const promise = new Promise((resolve, reject) => {\n      const request = firstIndex.getAll(range);\n      request.onsuccess = () => { resolve(request.result); };\n      request.onerror = (event) => { reject(event.target.error); };\n    });\n    const resPromise = promise.then((items) => {\n      const result = [];\n      items.forEach((item) => {\n        let isEqual = 1;\n        keys.forEach((key) => {\n          if (item[key] !== attrQuery[key]) isEqual = 0;\n        });\n        if (isEqual) {\n          result.push(item);\n        }\n      });\n      return result;\n    });\n    return resPromise;\n  }\n\n  static openDB(databaseName) {\n    // openDB(databaseName) databaseName是数据库名 string类型\n    // 返回值promise resolve(IDBDatabase) reject(Error)\n    if (!databaseName || (typeof databaseName !== 'string')) throw new TypeError(`数据库名不能为${databaseName}`);\n    const promise = new Promise((resolve, reject) => {\n      const request = indexedDB.open(databaseName);\n      request.onsuccess = () => {\n        const database = request.result;\n        database.isOpen = true;\n        database.onclose = () => { database.isOpen = false; };\n        resolve(database);\n      };\n      request.onerror = event => reject(event.target.error);\n    });\n    return promise;\n  }\n}\n\nexport default Store;\n","import Store from './indexeddb/store';\n\nconst visiteds = new Store('Visiteds');\n\nvisiteds.saveVisited = (url) => {\n  if (!url || (typeof url !== 'string')) return false;\n  const log = { date: new Date(), url };\n  return visiteds.set(log);\n};\nvisiteds.init = () => {\n  if (visiteds.init === 1) return false;\n  const init = visiteds.ready()\n    .then(() => visiteds.addColumns(['date', { index: 'url', unique: true }]))\n    .then(() => { visiteds.init = 1; });\n  return init;\n};\nvisiteds.init();\n\nexport default visiteds;\n","\n/**\n * Expose `isUrl`.\n */\n\nmodule.exports = isUrl;\n\n/**\n * RegExps.\n * A URL must match #1 and then at least one of #2/#3.\n * Use two levels of REs to avoid REDOS.\n */\n\nvar protocolAndDomainRE = /^(?:\\w+:)?\\/\\/(\\S+)$/;\n\nvar localhostDomainRE = /^localhost[\\:?\\d]*(?:[^\\:?\\d]\\S*)?$/\nvar nonLocalhostDomainRE = /^[^\\s\\.]+\\.\\S{2,}$/;\n\n/**\n * Loosely validate a URL `string`.\n *\n * @param {String} string\n * @return {Boolean}\n */\n\nfunction isUrl(string){\n  if (typeof string !== 'string') {\n    return false;\n  }\n\n  var match = string.match(protocolAndDomainRE);\n  if (!match) {\n    return false;\n  }\n\n  var everythingAfterProtocol = match[1];\n  if (!everythingAfterProtocol) {\n    return false;\n  }\n\n  if (localhostDomainRE.test(everythingAfterProtocol) ||\n      nonLocalhostDomainRE.test(everythingAfterProtocol)) {\n    return true;\n  }\n\n  return false;\n}\n","import isUri from 'is-url';\n\nconst isAliveElement = element => (element && element.nodeType === 1 && $(element).parent('html'));\n\nconst isEnterKey = event => (event.keyCode === 13);\n\nconst validateURL = (url) => {\n  if (!isUri) throw new Error('isUri 未能成功加载');\n  return (isUri(url) ? url : undefined);\n};//\n\nconst formatURL = (url) => {\n  if ((!url) || (typeof url !== 'string')) return false;\n  const hasPrefix = url.match(/^http[s]?:[/]{2}/);\n  const format = (hasPrefix) ? url : (`http://${url}`);\n  return format;\n};\n\nexport { isAliveElement, isEnterKey, validateURL, formatURL };\n","import visiteds from './visiteds';\nimport { isEnterKey, validateURL, formatURL } from './tool';\nimport { resetIframeHeight } from './supportIframeHeight';\n\nconst defaultLoading = () => {\n  const holder = $('<div>').addClass('absolute-center').attr('name', 'loading')[0];\n  const icon = $('<i>').addClass('fa fa-spinner fa-pulse loading fa-2x')[0];\n  $(holder).append(icon);\n  return holder;\n};\n\nconst defaultIframeAction = (iframe) => {\n  if (!iframe || (iframe.tagName !== 'IFRAME')) throw new Error('参数应该是<iframe>');\n  const iframeHolder = $(iframe).parents('.iframe-holder')[0];\n  if (!iframeHolder) throw new Error('<iframe>应该包含在<div class=\"iframe-holder\">之内');\n  const loading = $(iframeHolder).find('*[name=loading]')[0];\n  if (loading && (!$(loading).hasClass('hide'))) {\n    $(loading).addClass('hide');\n  }\n  $(iframe).removeClass('hide');\n  resetIframeHeight();\n};\n\nconst defaultIframe = () => {\n  const iframe = $('<iframe>').attr('width', '100%').attr('height', '100%').addClass('page none')[0];\n  $(iframe).on('load', () => {\n    defaultIframeAction(iframe);\n  });\n  return iframe;\n};\n\nconst bindEmbeddedBodyIframes = (embeddedBody) => {\n  if (!embeddedBody || !$(embeddedBody).hasClass('card-body')) throw new ReferenceError('bindEmbeddedBodyIframes的参数应该是一个包含class=\"card-body\"的<div>元素');\n  const iframes = $(embeddedBody).find('iframe');\n  if (!iframes) throw new Error('bindEmbeddedBodyIframes的参数元素不包含<iframe>');\n  iframes.each((index, iframe) => {\n    $(iframe).on('load', () => {\n      defaultIframeAction(iframe);\n    });\n  });\n  return embeddedBody;\n};\n\nconst embeddedSubmit = (submit) => {\n  if (!submit) throw new Error('embeddedSubmit的参数不能为空');\n  // ↓计算url\n  const inputGroup = $(submit).parents('.input-group')[0];\n  if (!inputGroup) throw new Error('submit应该有父元素<div class=\"input-group\">');\n  const input = $(inputGroup).find('input[type=text]')[0];\n  if (!input) throw new Error('submit应该有一个<input type=text>的相邻元素');\n  const val = $(input).val();\n  const url = validateURL(formatURL(val)) || `https://www.baidu.com/s?ie=UTF-8&wd=${val}`;\n  visiteds.saveVisited(url);\n  // ↓检查元素结构\n  const embeddedBody = $(submit).parents('.card-body')[0];\n  if (!embeddedBody) throw new Error('submit应该有class=\"card-body\"的父元素');\n  const homepage = $(embeddedBody).find('div[name=homepage]')[0];\n  if (!homepage) throw new Error('embedded 应该包含 <div name=\"homepage\">的元素');\n  const iframeHolder = $(embeddedBody).find('.iframe-holder')[0];\n  if (!iframeHolder) throw new Error('embedded 应该包含 <div class=\"iframe-holder\">的元素');\n  // ↓iframe-holder 由<div name=\"loading\"> 和 <iframe> 两个元素组成\n  const loading = $(iframeHolder).find('*[name=loading]')[0];\n  try {\n    if (!loading) throw new Error('iframeHolder 应该包含 loading 加载图标');\n  } catch (error) {\n    $(iframeHolder).append(defaultLoading());\n  }\n  const iframe = $(iframeHolder).find('iframe')[0];\n  try {\n    if (!iframe) throw new Error('iframeHolder 应该包含 <iframe> 元素');\n  } catch (error) {\n    $(iframeHolder).append(defaultIframe());\n  }\n  // ↓隐藏homepage显示iframe-holder\n  if (!$(homepage).hasClass('hide')) {\n    $(homepage).addClass('hide');\n  }\n  $(iframeHolder).removeClass('hide');\n  // ↓显示loading 隐藏未加载完成的iframe\n  $(loading).removeClass('hide');\n  if (!$(iframe).hasClass('hide')) {\n    $(iframe).addClass('hide');\n  }\n  // ↓加载iframe\n  $(iframe).attr('src', url);\n  return submit;\n};\n\nconst bindEmbeddedBodySubmits = (embeddedBody) => {\n  if (!embeddedBody) throw new Error('bindEmbeddedSubmits的参数不能为空');\n  if (!$(embeddedBody).hasClass('card-body')) throw new Error('bindEmbeddedSubmits的参数应有class=\"card-body\"标记');\n  const embedded = $(embeddedBody).parents('.embedded-control');\n  if (!embedded) throw new Error('bindEmbeddedSubmits的参数应该有父元素带有标记class=\"embedded-control\"');\n  const submits = $(embeddedBody).find('button[name=submit]');\n  if (!submits) return false;\n  submits.each((index, submit) => {\n    $(submit).on('click', () => {\n      embeddedSubmit(submit);\n    });\n  });\n  return embeddedBody;\n};\n\nconst bindEmbeddedInput = (input) => {\n  if (!input || (input.tagName !== 'INPUT')) throw new Error('参数不是一个<input>');\n  const inputGroup = $(input).parent('.input-group')[0];\n  if (!inputGroup) throw new Error('这个<input>应该有父元素<div class=\"input-group\">');\n  const submit = $(inputGroup).find('button[name=submit]');\n  if (!submit) throw new Error('这个<input>应该有相邻元素<button name=\"submit\">');\n  $(input).on('keypress', (event) => {\n    if (isEnterKey(event)) { submit.click(); }\n  });\n  $(input).on('focus', () => {\n    const promise = visiteds.getAll()\n      .then((items) => {\n        const datalist = $('#urls');\n        datalist.html('');\n        items.forEach((item) => {\n          const option = $('<option>').attr('value', item.url);\n          datalist.append(option);\n        });\n        return items;\n      });\n    return promise;\n  });\n};\n\nconst bindEmbeddedBodyInputs = (embeddedBody) => {\n  if (!embeddedBody || !$(embeddedBody).hasClass('card-body')) throw new ReferenceError('initEmbeddedBody的参数应该是一个包含class=\"card-body\"的<div>元素');\n  const inputs = $(embeddedBody).find('input[type=text]');\n  if (!inputs) throw new Error('<div class=\"card-body\"> 内没有<input>');\n  inputs.each((index, input) => {\n    bindEmbeddedInput(input);\n  });\n  return embeddedBody;\n};\n\nconst initEmbeddedBody = (embedded) => {\n  if (!embedded || !$(embedded).hasClass('embedded-control')) throw new ReferenceError('initEmbeddedBody的参数应该是一个包含class=\"embedded-control\"的<div>元素');\n  let embeddedBody = $(embedded).find('.card-body')[0];\n  try {\n    if (!embeddedBody) throw new ReferenceError('embedded-control 没有 card-body');\n  } catch (error) {\n    if (error instanceof ReferenceError) {\n      embeddedBody = $('<div>').addClass('card-body entrance');\n      $(embedded).append(embeddedBody);\n    }\n  }\n  bindEmbeddedBodyIframes(embeddedBody);\n  bindEmbeddedBodySubmits(embeddedBody);\n  bindEmbeddedBodyInputs(embeddedBody);\n  return true;\n};\n\nexport default initEmbeddedBody;\n","const bindRefreshButton = (embedded) => {\n  if (!embedded || !$(embedded).hasClass('embedded-control')) throw new Error('参数元素应该是有标记class=\"embedded-control\"');\n  const embeddedBody = $(embedded).find('.card-body')[0];\n  if (!embeddedBody) throw new Error('缺少card-body');\n  const iframeHolder = $(embeddedBody).find('.iframe-holder')[0];\n  if (!iframeHolder) throw new Error('缺少iframe-holder');\n  const iframe = $(iframeHolder).find('iframe')[0];\n  if (!iframe) throw new Error('缺少iframe');\n  const buttons = $(embedded).find('button[name=refresh]');\n  if (!buttons) return false;\n  buttons.each((index, button) => {\n    const icon = $(button).find('i')[0];\n    if (!icon || !$(icon).hasClass('fa-refresh')) throw new Error('没有refresh图标');\n    $(button).on('click', () => {\n      const src = $(iframe).attr('src');\n      if (src) {\n        if (!$(icon).hasClass('fa-pulse')) {\n          $(icon).addClass('fa-pulse');\n        }\n        $(iframe).on('load', () => {\n          $(icon).removeClass('fa-pulse');\n        });\n        $(iframe).attr('src', src);\n      }\n    });\n  });\n  return embedded;\n};\n\nconst bindHomePageButton = (embedded) => {\n  if (!embedded || !$(embedded).hasClass('embedded-control')) throw new Error('bindHomePageButton的参数元素应该是有标记class=\"embedded-control\"');\n  const embeddedBody = $(embedded).find('.card-body')[0];\n  if (!embeddedBody) throw new Error('缺少card-body');\n  const homepage = $(embeddedBody).find('.homepage')[0];\n  if (!homepage) throw new Error('缺少homepage');\n  const iframeHolder = $(embeddedBody).find('.iframe-holder')[0];\n  if (!iframeHolder) throw new Error('缺少iframe-holder');\n  const buttons = $(embedded).find('button[name=homepage]');\n  if (!buttons) return false;\n  buttons.each((index, button) => {\n    $(button).on('click', () => {\n      if (!$(iframeHolder).hasClass('hide')) { $(iframeHolder).addClass('hide'); }\n      $(homepage).removeClass('hide');\n    });\n  });\n  return embedded;\n};\n\nconst initEmbeddedHeader = (embedded) => {\n  if (!embedded || !$(embedded).hasClass('embedded-control')) throw new Error('initEmbeddedHeader的参数元素应该是有标记class=\"embedded-control\"');\n  const embeddedHeader = $(embedded).find('card-header');\n  if (!embeddedHeader) throw new Error('<div class=\"embedded-control\">需要一个存在子元素<div class=\"card-header\">');\n  bindHomePageButton(embedded);\n  bindRefreshButton(embedded);\n  return true;\n};\n\nexport default initEmbeddedHeader;\n","\nimport initEmbeddedBody from './embeddedBody';\nimport initEmbeddedHeader from './embeddedHeader';\n\nconst isEmbedded = (embedded) => {\n  if (!embedded) throw new ReferenceError(`参数不能为 ${embedded}`);\n  if (embedded.nodeType !== 1 || embedded.tagName !== 'DIV') throw new ReferenceError(`${embedded} 不是一个<div>元素`);\n  if (!$(embedded).hasClass('embedded-control')) throw new ReferenceError(`${embedded} 缺少class=\"embedded-control\"标记`);\n  return true;\n};\n\nconst hasEmbeddedHeader = (embedded) => {\n  isEmbedded(embedded);\n  const embeddedHeader = $(embedded).find('card-header');\n  if (!embeddedHeader) throw new Error(`${embedded} 不包含<div class=\"card-header\">`);\n  return true;\n};\n\nconst hasEmbeddedBody = (embedded) => {\n  isEmbedded(embedded);\n  const embeddedBody = $(embedded).find('card-body');\n  if (!embeddedBody) throw new Error(`${embedded} 不包含<div class=\"card-body\">`);\n  return true;\n};\n\nconst bindEmbeddeds = () => {\n  const embeddeds = $('.embedded-control');\n  if (!embeddeds) return false;\n  $(embeddeds).each((index, embedded) => {\n    $(embedded).attr('id', `embedded-${index}`);\n    initEmbeddedBody(embedded);\n    initEmbeddedHeader(embedded);\n  });\n  return embeddeds;\n};\n\nexport default bindEmbeddeds;\nexport { isEmbedded, hasEmbeddedHeader, hasEmbeddedBody };\n\n","'use strict';\n\nimport { supportIframeHeight } from './supportIframeHeight';\nimport bindDrager from './drager';\nimport bindEmbeddeds from './embedded';\n\n$(document).ready(() => {\n  if (!document.querySelector) return false;\n  supportIframeHeight();\n  bindEmbeddeds();\n  bindDrager();\n  return true;\n});\n// drager.js 拖拽\n// embedded.js 主要控制\n// indexeddb/store.js 数据库indexedDB\n// supportIframeHeight 解决 iframe 的 height=\"100%\" 的问题\n// tool 一些计算结果的方法\n"]}