{"version":3,"sources":["supportIframeHeight.js","drager.js","indexeddb/store.js","indexeddb/visiteds.js","../../node_modules/is-url/index.js","tool.js","embeddedBody.js","embeddedHeader.js","embedded.js","index.js"],"names":["resetIframeHeight","iframes","$","each","index","element","height","attr","perHeight","match","per","parseInt","cssHeight","parent","css","supportIframeHeight","window","onresize","getMouseButton","event","MouseEvent","isIE","navigator","appName","button","dragCardHeader","card","cardHeaderDrager","find","cardHeader","cardBody","top","offsetTop","cardHeaderMinHeight","cardHeaderLastChild","lastElementChild","cardHeaderLastChildHeight","offsetHeight","cardHeaderLastChildTop","clientY","display","cursor","bindCardHeaderDrager","cards","curtain","addClass","dragHandler","on","stopPropagation","preventDefault","document","insertBefore","off","remove","dragCardLeft","cardLeftDrager","col","parents","container","left","offsetLeft","width","clientWidth","total","offsetWidth","grow","x","clientX","goalWidth","goalPer","goalGrow","bindCardLeftDrager","bindDrager","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","Store","storeName","Error","name","databaseName","database","IDBDatabase","TypeError","version","onclose","isOpen","close","Number","isSafeInteger","openVersion","closeDB","promise","Promise","resolve","reject","request","open","onsuccess","setDB","result","onerror","target","error","onupgradeneeded","tx","transaction","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","objectStore","createIndex","unique","openDB","then","column","option","columnOption","db","store","indexNames","deleteIndex","columns","Array","newColumns","forEach","columnType","push","id","isReady","delete","ids","length","ready","deleteItem","args","isInt","isArray","deleteItems","item","undefined","put","items","setItem","isObj","setItems","get","sortIds","sort","range","bound","getAll","resPromise","includes","idQuery","getItem","getItems","indexName","openIndexName","attrQuery","keys","Object","firstIndex","only","isEqual","key","visiteds","saveVisited","url","log","date","Date","set","init","addColumns","isAliveElement","nodeType","isEnterKey","keyCode","validateURL","formatURL","hasPrefix","format","defaultLoading","holder","icon","append","defaultIframeAction","iframe","tagName","iframeHolder","loading","hasClass","removeClass","defaultIframe","bindEmbeddedBodyIframes","embeddedBody","ReferenceError","embeddedSubmit","submit","inputGroup","input","val","embedded","homepage","bindEmbeddedBodySubmits","submits","bindEmbeddedInput","click","datalist","html","bindEmbeddedBodyInputs","inputs","initEmbeddedBody","bindRefreshButton","buttons","src","bindHomePageButton","bindEmbeddedHeaderSubmit","header","initEmbeddedHeader","embeddedHeader","isEmbedded","hasEmbeddedHeader","hasEmbeddedBody","bindEmbeddeds","embeddeds","querySelector"],"mappings":";;;;;;AAAA,IAAMA,oBAAoB,SAApBA,iBAAoB,GAAM;AAC9B,MAAMC,UAAUC,EAAE,QAAF,CAAhB;AACA,MAAI,CAACD,OAAL,EAAc,OAAO,KAAP;AIFhB,AHAA,ADGEA,UAAQE,IAAR,CAAa,UAACC,KAAD,EAAQC,OAAR,EAAoB;AIFnC,AJGI,QAAMC,SAASJ,EAAEG,OAAF,EAAWE,IAAX,CAAgB,QAAhB,KAA6B,EAA5C;AIFJ,AHAA,ADGI,ICHEW,IDGIV,YAAYF,CCHC,MDGMG,GCHvBS,EDGgB,CAAa,OAAb,CAAlB,GCHmB,CAACC,KAAD,EAAW;AGClC,AHAE,ADGE,MCHE,CAACA,CDGC,CAACX,GCHH,IAAWW,EDGb,EAAgB,aCHcC,UAAhC,EAA6C,OAAO,KAAP;AGC/C,AHAE,AEJF,AHMsB,MCFdC,OAAQC,UAAUC,OAAV,KAAsB,6BAApC;AGCF,AHAE,ADC6B,MCDzBC,SAAS,OAAb;AGCF,AHAE,ADCE,QAAMd,ECDAS,IDCMR,ECDAa,MAAd,CDCuBhB,SAAT,EAAoB,EAApB,CAAZ;AIAJ,AHAI,ADCA,QAAMI,CCDD,CAAL,UDCkBV,EAAEG,OAAF,EAAWQ,MAAX,GAAoBP,MAApB,MAAgCI,MAAM,GAAtC,CAAlB;AIAJ,AHAMc,ACPN,AFQItB,IEREuE,EFQApE,OAAF,ECDW,ADCAS,CERGE,EFQd,CAAe,ECDb,ECPmByD,IFQrB,EAA4B7D,GERd,IAChBI,EFOE,KEPK0D,YADS,IAEhB1D,OAAO2D,eAFS,IAGhB3D,OAAO4D,WAHT;AEQA,AHAM,ACJN,AFKG,GAPD,CEEIC,iBAAiB7D,OAAO6D,cAAP,IACrB7D,OAAO8D,oBADc,IAErB9D,OAAO+D,gBAFT;AEKA,AHAI,ACFJ,ACNA,AHSE,IEHIC,ACNA+F,KFQG,ADCA9K,CCDL,KERa,CHSf,EEHkBe,OAAOgE,UCNA,CDMP,IAClBhE,KCPe,CAAjB,CDOSiE,iBADW,IAElBjE,OAAOkE,aAFT;AEGA,AHAM1D,ADCL,CAZD,cCWgBH,IAAD,GAAS,MAAT,GAAkB,QAA3B;AGCN,AHAM,AERN0J,IDQM5F,KCRG6F,WAAT,GAAuB,UAACC,GAAD,EAAS;ACShC,AHAI,ACAF,ACRA,AHSF,IAAMlK,EGTA,CAACkK,EFQE,CAAL,AERE,IAAS,GDQD7F,ICRQ6F,GAAP,EDQb,AFC0B,EEDH,CCRK,MHSxBlK,EGTJ,EAAuC,OAAO,KAAP,GHSb,GAAM;AIAlC,AHAMS,ACDmB,ACPvB,AHSAxB,MGTMkL,MAAM,EAAEC,CFQD,KERO,GFQhB,CERoBC,IAAJ,EAAR,EAAoBH,QAApB,EAAZ;ACSF,AHAM,AERJ,AHSAjK,SGTO+J,AHSA9J,QAAP,CGTgBoK,EHSE,CGTX,CAAaH,GAAb,CAAP,MHSwB;AIA1B,AHAI,ACFA,ACNH,AHSGlL,CGbJ,ODUQ,CAACyE,SAAD,IAAc,CAACI,cAAf,IAAiC,CAACG,WAAtC,EAAmD,MAAM,IAAIK,KAAJ,CAAU,mBAAV,CAAN;AEGvD,AHAM7D,ACFF,ACNJuJ,AHSG,GAFD,MEDOzF,ACNAgG,IDML,ACNJ,EFQe,CCFC,ACNA,KDMKhG,CDEf,GCFU,GCNM,CDMOF,SAAzB;AEGJ,AHAM,ACFF,ACNF,AHSD,CALD,KGJM2F,GDMGxF,MCNM+F,IAAT,EDMF,GAAoB,ACNA,CAAtB,EAAyB,OAAO,KAAP,EDMvB;AEGJ,AHbE,ACWE,ACNF,MAAMA,KDMG,ECNIP,EDMX,OCNoBjC,KAAT,GACVnB,IADU,CACL;ACQV,AHAE,ACFC,ACNO,QHSD3H,CCDAwB,EEROuJ,IFQd,KERuBQ,QHShBvL,EGTO,CAAoB,CAAC,MAAD,EAAS,EAAEI,OAAO,KAAT,EAAgBqH,QAAQ,IAAxB,EAAT,CAApB,CAAN;ACSV,AHAC,AETS,CFVV,EESe,EAEVE,GHQuB5G,CGVb,CAEL,YAAM,QHQYA;AIC5B,ADTkBgK,aAASO,IAAT,GAAgB,CAAhB;ACUlB,AHAA,AEVsC,GAFvB,CFYT7J,AEZJ,iBFYqB,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AGCjC,AHAE,AEVA,MFUI,CAACA,EEVE4J,EFUP,EAAW,AEVX,OFUkB,KAAP,CCJL9F,UAAU;AEKlB,AHAE,ACLgB,ACLjB,CAND,KFgBQ7D,mBAAmBzB,EAAEwB,IAAF,EAAQE,IAAR,CAAa,gBAAb,EAA+B,CAA/B,CAAzB;AGCF,AHAE,AEVFmJ,MFUQlJ,GEVCyJ,IAAT,MFUqBpL,EAAEwB,IAAF,EAAQE,IAAR,CAAa,cAAb,EAA6B,CAA7B,CAAnB;AGCF,AHAE,ACNE,MDMIE,ICNA,CAAC0D,MDMUtF,EAAEwB,ACNb,IDMW,ACNE,EDMME,ACNJ4D,IDMJ,CAAa,YAAb,EAA2B,CAA3B,ACNwBC,CDMzC,UCNmB,CAAjB,EAAqD,MAAM,IAAIC,SAAJ,CAAc,WAAd,CAAN;AEOzD,AHAE,ACNE,MDME,CAAC/D,ICNE6D,OCJMuF,CDIX,GAAgBvF,CDMd,IAAqB,CAAC3D,ECNxB,QDME,IAAoC,CAACC,QAAzC,EAAmD,OAAO,KAAP;AGCrD,AHAE,ACNE,MDMIC,KCNC4D,CDMK9D,MCNV,GAAe,EDMMG,GCNDwD,MDMtB,ECNiB,CAAcG,OAA7B;AEOJ,AHAE,ACNE,MDME1D,KCNGuD,QAAL,CAAcI,OAAd,CDMwB,EAA1B,ACN0B,YAAM;AEOlC,AHAE,ACNI,MDME1D,QCNGsD,QAAL,CAAcK,KDMUhE,CCNxB,GAAuB,KAAvB,EDMmCM,gBAAvC;AGCF,AHAE,ACNG,MDMCD,CCRF,kBDQF,EAAyB;AGC3B,AHAI,ACNA,QDMME,KCNCoD,QAAP,eDMkCtD,oBAAoBG,YAAtD;AGCJ,AHAI,ACND,QDMOC,yBAAyBJ,oBAAoBF,SAAnD;AGCJ,AHAIC,0BAAsBG,4BAA4BE,sBAAlD;AGCJ,AHAG;AGCH,AHAE,SAAO,UAACnB,KAAD,EAAW,ICPR;AEQZ,AHAI,ACPA,QDOIb,KCPG,IDOMa,CCPDqE,KDOOjD,GCPZ,IDOM,ACPY,GDOIR,ECPCyD,CDO9B,OCPyB,YAAyBC,WAA3C,IAA2D,KAAKD,QAAL,CAAcM,KAAd,EAAlE;AEQJ,AHAI,ACPD,QDOKxF,SAAS2B,mBAAb,EAAkC;AGCtC,AHAM3B,eAAS,CAAT;AGCN,AHAMJ,QAAE2B,UAAF,EAAcf,GAAd,CAAkB,EAAE0B,SAAS,MAAX,EAAlB;AGCN,AHAK,KAHD,MAGO,gBCRFmD,SAAS;AESlB,AHAMzF,ACTY,QDSV2B,UAAF,EAAcf,GAAd,CAAkB,EAAE0B,SAAS,EAAX,EAAlB;AGCN,AHAK;AGCL,AHAItC,ACVA,MDUE,MAAF,EAAUY,GAAV,CAAc,EAAE2B,QAAQ,UAAV,EAAd;AGCJ,AHAIvC,ACVA,MDUE2B,UAAF,EAAcf,GAAd,CAAkB,EAAER,QAAWA,MAAX,OAAF,EAAlB;AGCJ,AHAI,ACVA,WDUOoB,IAAP;AACD,ACVC,GDDF,OCCMiE,OAAJ,EAAa;ADWhB,ACVK,CDhBN,WCgBU,CAACI,OAAOC,aAAP,CAAqBL,OAArB,CAAL,EAAoC,MAAM,IAAID,SAAJ,CAAc,UAAd,CAAN;AACpC,YAAIC,UAAU,KAAKA,OAAnB,EAA4B,MAAM,IAAID,SAAJ,CAAc,eAAd,CAAN;ADYlC,ACXK,IDWChD,uBAAuB,SAAvBA,oBAAuB,GAAM;AACjC,ACXE,MDWIC,ICXEsD,IDWM/F,EAAE,OAAF,CAAd,ACXuByF,WAAWI,OAAOC,aAAP,CAAqBL,OAArB,CAAX,IAA6CA,UAAU,KAAKA,OAA7D,GAChBA,OADgB,GACN,KAAKA,OADnB;ADYF,ACVE,MDUE,CAAChD,ICVEuD,CDUP,EAAY,ICVV,GDUiB,KAAP;AACZ,ACVE,MDUItD,ICVEuD,MDUQjG,EAAE,ECVA,IAAIkG,CDUN,EAAWvD,ICVT,CAAY,GDUd,CAAoB,MCVLwD,GDUf,CAAhB,GCV8B,EAAUC,MAAV,EAAqB;ADWnDpG,ACVI,IDUFyC,KAAF,EAASxC,CCVCoG,GDUV,CAAc,MCVM9B,IDULrE,KAAD,CCVgBoG,CDUR9E,GCVF,CDUN,ACVqB,EDUJ,KCVS6D,YAApB,EAAkCU,WAAlC,CAAhB;ADWF,ACVEM,AG/CN,QJyDU5E,QCVI8E,SAAR,EDUuBvG,CCVH,CDUKwB,IAAF,EAAQE,IAAR,CAAa,ACVV,gBDUH,EAA+B,CAA/B,CAAzB;AACA,AQ1DJ,APgDQ,QDUA,CAACD,QCVI+E,KAAL,CAAWH,EDUf,EAAuB,ICVAI,MAAnB;ADWJ,AK3DJ,AJiDQ,QDUE7D,SCVG0C,KDUW/D,GCVhB,CAAcoE,MAAd,GAAuB,EDUQnE,ECV/B,EDUgB,CAApB;AACAxB,AM5DJ,AEEA,APgDQmG,MDUF1E,YCVU,IDUZ,EAAoBoB,CCVHyC,CDUjB,CAAuB,MCVnB,KDUJ,EAAoC,UAACrE,KAAD,EAAW;AAC7CA,ACVC,SAJD,GDcM6B,eAAN;AACA7B,AM5DN,AECA,APiDMoF,IKlDAwH,QN4DM9K,ICVE2D,OAAR,CKlDoB,EN4DpB,ACVkB,OKlDlBmH,GLkDmB5M,KAAD,EAAW,OKlDT,CAACiM,QAAD,EAAc;AN6DlC,AO9DN,AFAA,ACEE,ALiDmC9G,AGlDrC,IAAMkF,EECA,CAAC4B,GN4DGlM,KM5DJ,ELiDsCC,EKjDzB,CAACjB,CFDG,CECDkN,CLiD4BvG,EDWzB1F,ICXmB,CDWlC,AM5DU,ALiDqC2F,AGlDnD0E,EEC0BiB,GLiDK,CDWD,IM5DhB,CAAqB,CN4DnC,EAAsC,AI7DrB,eECH,CAAlB,EAA4D,MAAM,IAAIpH,KAAJ,CAAU,oCAAV,CAAN;AN6DtDnF,AM5DN,ALgDgE,AGlD3C,MEEf2M,GLgDF,AGlD6BxM,CJ8DzB6C,QAAF,EAAYH,AI9D0B1C,CEEvBH,CN4Df,CAAe,AM5DEkN,KFF6B3B,GEE/B,EAAY7J,CN4D3B,EAA4BkB,AI9DU,CEEvB,CAAiB,GFF2B,CAAhC,IAAqC5C,CJ8DhE,CI9DkEG,EEEnD,EAA+B,CAA/B,CAArB,CFFsE,EAAWQ,MAAX,CAAkB,MAAlB,CAAjD;AJ+DhB,AK/DP,ACGE,ALgDI0F,AGnDiB,CAAvB,KEGM,CAACsG,SLgDO9F,GKhDZ,EAAmB,MAAM,IAAI1B,ALgDzB,GAA0B,EKhDL,CAAU,OLgDJlE,KAAD,CKhDL,CAAN,ALgDsB;ADarCjB,AM5DJ,AEFF,APkDQ,MKhDAqM,EN4DA3J,OAAF,EAAWO,ACZJuD,IKhDUxG,CLgDf,CKhDiB2M,ALgDN1L,MDYb,ACZmB0F,CDYK,KM5DP,ALgDJ,CDYb,ACZ0BF,CKhDO/E,IAAhB,CAAqB,ALgDpC,gBKhDe,EAAuC,CAAvC,CAArB;AN6DG,AOjEL,ADKE,ALgDM,AGnDR,IAAM8J,CJwDF,CMrDE,CAACa,OLgDOvF,GGnDK,EEGjB,ALgDiB7F,EKhDE,ILgDI0F,CGnDnB6E,CEGqB,IAAIrG,ALgDZ,CAAa4B,IKhDL,AFHR,CEGkB,MLgD7B,WKhDmB,CAAN;AN6DjB/G,AM5DF,ALgDM,AGpDW,MJgEbgD,AM5DEmJ,GFJqBlL,KJgEzB,ACZQ,CKhDKjB,ALgDJ8G,AGpDsB2E,CJgEnB5I,CM5DGwJ,CN4Df,ACZYrF,CDYG,GIhEU,KAAkB,CJgE3C,CM5Da,AFJE,CJgEW,CM5DGtF,GLgDpB,CKhDI,ALgDgBuF,CKhDK,MN4DF,CCZvB,CKhDI,ALgDyB,EKhDM,CAA/B,CAAf,GLgD6C7B,IAAlC,CAAL,EAA8C;ADahDpF,AKjEN,ACKE,ALgDQ,AGrDS,CAAnB,GCAM8L,ECKA,CAACK,CN4DC,KM5DN,CN4DI,CM5DS,CN4DCvL,GAAV,ACZS0E,CDYK,CKjEG,ACKF,CN4DC/C,GM5DG4C,ELgDf,CAAc+B,EDYM,AKjExB4E,ACKe,CAAU,QN4DX,EAAd,AM5De,CAAN,EDLQ,CJqDb,CAAgC,CIrDb,MJqDkB1G,IAArC,EAA2C,EAAE+B,SAAS,IAAX,EAAiBC,eAAe,IAAhC,EAA3C;ADaJpH,AKjEJ,ACKA,ALgDQ8G,MIrDFiF,ACKA+B,EN4DA9K,OKjEShD,AJqDJqH,CDYP,AM5DYrH,CDLC,CLiEDkD,AM5DEgK,GN4Dd,CAAgB,EKjEL,EAAWvK,ACKV,ALgDR,CAAe,CKhDKjB,IAAZ,CN4DZ,AM5D6B,CDLlB,AJqDa0D,CDYKxC,AKjEE,GJqD3B,EAA0B0E,MDY9B,KCZI,CIrDO,AJqD+B,EIrDQjH,CCKtC,CAAhB,ALgDQ,EIrDO,AJqDqC,CIrDO,GJqDnD,EAAkD,CIrD3C,CJqD6CkH,CIrDO,OJqDC,EIrDrD,EAA+D,AJqDpB,CIrD3C,CAAf,AJqDQ;ADaJ,AKjEJ,ACKA,ALgDO,AGrDT,IAAMmE,ECAEM,ACKF,CAAC8B,MDLQ9N,CCKb,CDLe,CCKD,EFLI,ECAL,EAAS2C,CCKD,IFLjB+I,CEKU,EDLD,CAAkB,ODAb,CAACX,GAAD,EAAS,yBCAd,EAA0D,CAA1D,CAAb;ALkEI/K,AKjEJA,ACKA8N,AENF9N,APsDO,AGrDL,EIDAgD,EHCE+I,EDAE,EJiEE,CCnBF,CI9CJ,ACKQ9L,AENV,EHCYgM,AGDArD,EFMV,CAAa,EENf,CRkEM,AKjEJ,AGDgB,CHCCoD,CLiEC7I,EIjElB,CCAA,CDAY,CEKEjD,CN4DV,IM5DS,AENS,AJCJ,EEKGoB,EFLC6D,IEKT,CFLK,CEKc,AFLJ,cAAV,CAAN;AJkET,AOrEL,AFIE,ACKE,AENF,APsDG,AGrDH,IGJIkJ,CPgEF,CQ7DE,CAACrL,APsCa,CKhCVgJ,ALgCN,CIrCKD,ADAC,MCAR,ACKe/L,CEND0O,CDHG,ADSApN,MAAF,EAAUI,CCTrB2M,GDSW,AENf,CFM8B,AFLhBtD,CIDe,EFMd,AFLP,EEK2B,CCTlB,ADSF,CCTGmC,ADShB,AFLmBnC,CIDe,EJC5B,GIDqB,AJCF5B,EGJV,EAAc,KHI/B;AJkEC,AOrED,AFID,ACKG,AENF,APsDE,AGrDH,CCLD,ADEA,EJkDE,AI/CA,GGJI,CAAC+D,CDSC,CAAClB,IAAD,ALgDG/F,EMzDT,EAAe,ADSA,CAACjG,EAAEgM,ALgDhB,GMzDmB,CDSL,EAAQO,CCTCK,ODST,CAAiB,MCTZ,MDSL,CAAd,EAA8C,MAAM,IAAIzH,KAAJ,CAAU,YCTf+H,CDSK,CAAN,MCT3B,CAAN;APsEf,AOrEA,ADSElN,AENF,APsDC,MMzDGkN,ADSA5L,GN4DGmB,GM5DL,EN4DF,AM5DYI,CCTC0I,CDSX,CAAa,MCTX,CDSF,EAAsB,ECTE,CAAtB,IAA2B2B,KDSD,ICTUd,OAAT,KAAqB,KAApD,EAA2D,MAAM,IAAIQ,cAAJ,CAAsBM,QAAtB,gDAAN;APsE5D,AOrEC,AFIF,ACKM,AENJ,AJCF,CJyCA,GKzCMhB,ADAAP,EGJA,CAAC3L,EAAEkN,CDSGa,MAAM/N,AFLA,CGJX,CDSamM,CCTDI,KDSD,CFLZZ,CCAsB,ACKAtL,CCTrB,CAAqB,EDSV,CAAe,GFLf,CCAZ6L,ADAanB,CEKD,CAAZ,CFLY,EAAS,MGJpB,CAAL,EAA+C,KFIrB,CEJ2B,AFI1BoB,IEJ8BS,EFI/B,EAAY,UEJe,CAAsBM,QAAtB,uDAAN;AAC/C,AFIA,ACKI,AENJ,AJCA,MCAI,ADAC,CCAAf,ADACpB,EGJC,ACGA,CFMCgD,AFLJ,GGJJ,AFII,ACKA,AENJ,CJCe,CEKF,EDLG5B,IDAMpB,GCACqB,ADAR,KAAe,ECAd,KAAmB,CDAnC,EAAyC,KCAzC,EAA8C,ADAE,KAAP,CCAW,IAAIjH,KAAJ,CAAU,eAAV,CAAN;ALkEhD,AOrEC,AFIC,ACKM,AENP,AJCC,CGTF,ACEA,GRwEM/B,EKjEEiJ,ADAAT,MEKI,CAAC5L,EAAEgM,GFLKjB,CJiEC,AM5DR,EDLU/K,ACKFuM,CFLGhM,CCAC4L,IDAL,CJiEd/I,ACbI,AGpDoB,CCAP,ACKV,CAAiB,CDLGG,OAAV,CAAkB,CLiEpB,AM5DR,CN4DS/B,AM5Dd,EAAmC,EN4DtB,CIjED,CJiEW,AIjE7B,QCAqB,EAAoC,CAApC,CAArB;ALkEA,AKjEA,ACKQxB,AENV,APoDU,AGnDR,MJiEI,AKjEA,ADAE6L,CJiEDrK,AKjEA6K,ILiEL,CM5DUL,CN4DC,EIjEKJ,CEKR,EAAQjJ,CDLhB,CLiEkB,CKjEC,GDAJ,CJiEJ,CM5DH,CDLiB,ACKA,AFLIoI,GAAd,CCAc5F,KAAJ,CAAU,ACK3B,SFLuC4F,GAA/C,gCCAyB,CAAN;ALkEnB,AOrEF,AFIE,ACKO,AENT,AJCE,IGJIuD,EPqEEjL,AKjEAiJ,GDACT,MAAP,CCAgB7L,EAAEqM,KLiEKrM,COrEC,CPqECwB,IAAF,CKjEP,CLiEeE,CKjECA,CEJ5B4M,EPqEmB,CAAa,AKjEpB,CAAqB,aLiEd,AOrEC,CAACpB,CPqE2B,CAA7B,CAAvB,AKjEgB,EAAwC,CAAxC,CAAhB,CEJwB,EAAc;APsEtC,AOrEAmB,AFIA,ACKMrO,AENR,APmDI,AGlDH,CALD,KJsEQ2B,AKjEF2K,ICKIH,GCTGe,ANsDF,GK7CH,CDLU,CAAClN,ACKD6C,AL6CF2E,CDeKxH,CKjEAsM,ACKb,CN4De9K,AOrErB,ADSmB,GL6CV,CDeU,EAAQE,AKjEV,ACKX,AL6CiB+F,EIlDK8E,ACKD,EN4DR,ACfV,CDeuB,ACfJ,KIlDX,CAAoB,GCKJ,GDLhB,CAAjB,CLiEmB,CKjE4B,CLiEC,CAA7B,CAAnB;AACA,AOrEA,AFIEvM,ACKMA,AENV,APkD8B,MDgBtB4B,AOrEAwM,AFIF9B,MCKMN,CDLR,EAAWrJ,AJiD2B,CK5ChC,CN4DS3C,CM5DDwM,CN4DGhL,GChB0BgF,CDgB5B,AOrEMxG,AFIrB,CAAoB,CLiEG0B,AOrEAwL,ENqDe,CAAW5H,CDgBlC,AM5DT,CN4DsB,AKjE5B,ACK0B,GCTL,EAAY5D,CNqDK,CAAZ,EMrDL,CAAiB,ADShC,EN4DS,EAA2B,CAA3B,CAAjB,OOrEuB,CAAvB;APsEA,AOrEA,AFIC,ACKM,AENT,APiD8B,MDiBtB4B,AOrEF,CAAC8K,ANoDI,CAAP,AGhDK9C,CEGD,GN8DMtL,EAAEwB,IAAF,EAAQ+B,COrEpB,EAAqB,EHId+H,EJiEK,CAAgB,COrED,IAAInG,CPqEnB,EAAwB,CAAxB,CAAZ,AOrE2B,CAAa+H,QAAb,kDAAN;APsErB,AOrEA,AFIAlN,ACKMA,AL2CL,IIhDCmM,ELiEI3I,EIlEiBgI,CGHhB,CFIP,ACKQW,EDLEK,CEJV,GDSM,EN4DYxM,AM5DFK,EN4DIiD,CIlEGkI,CEMjB,CN4DY,AKjElB,ACKqB,CDLC,CLiEG7K,GM5DnB,EDLN,ACK4BoN,CN4DV,EM5DZ,CN4D4B,CAAhB,CAAlB;AACA,AOrED,AFIC,ACKK,CCdP,KP0EM,CAAC1K,CInE8BqI,aJmE/B,CInE+BA,GJmEZ,CAAC/J,UAApB,IAAkC,CAACC,QAAnC,IAA+C,CAAC0B,GAAhD,IAAuD,CAACE,SAA5D,EAAuE,OAAO,KAAP;AACvE,AKjED,ACKI,CDfL,ICII,GFG8CmI,CJoEzC,UAAC1K,CIpEwC0K,IJoEzC,EAAW;AAChB,AOrEJ,ADSG,GAfD,CCMI4C,IPqEI9K,OAAOH,IAAII,GOrEG,OPqEpB,CClBQ,CMnDN6K,eAAkB,CAACrB,QAAD,EAAc;APsElC,AOrEFmB,AFIF,ACKE,AL0CE,II/CE5B,ILiEI9I,CM5DDuJ,ICTIA,ANmDF,GDkBO5J,CM5DhB,CL0CcgC,EDkBM1B,AKjEA,CEJpB,KNmDS,GI/CL6I,CJ+CuB,CDkBzB,IClB8BnH,OI/CZ,CJ+CO,EI/CD,UJ+C0BC,WAA3C,IAA2D,KAAKD,QAAL,CAAcK,MAAhF;ADmBA,AOrEF,AFIA,ACKD,AL0CE,CKrEH,KCkBQgH,AFIAR,ELiEEtI,OKjEO7D,CLiECwD,CKjEC,IEJIxD,EAAEkN,GPqEGpJ,CKjEX,EAAczD,EEJR,EAAYqB,AFIlB,CAAmB,GLiEhC,AOrEmB,CAAiB,GFIvB,EAA4B,MEJtB,AFIN,CEJf,CFImDrB,IAApC,CAAyC,QAAzC,EAAmD,MAAnD,EAA2DsC,QAA3D,CAAoE,WAApE,EAAiF,CAAjF,CAAf;ALkEE,AOrEF,AFIA3C,IAAEmM,EEJE,CAACQ,CPqEGnM,EKjER,EAAUqC,ELiEIc,AKjEd,CAAa,IEJb,EAAmB,AFInB,CLiEsBE,CKjED,ILiEnB,AOrEuB,IAAIsB,IFIF,CEJF,CAAa+H,QAAb,gDAAN;APsEjB,AOrEF,AFIEhB,ACKJ,IAAM8B,IN4DIjK,COrED,IAAP,EPqEe/D,EAAEsD,GAAF,EAAO1C,EKjEAuL,CLiEP,AM5DU,CN4DC,IKjExB,ICKE6B,GN4DW,CAAb,cM5DuB,CAACd,QAAD,EAAc;AN6DrC,AOrEH,AFIE,ACKD,CCdF,EFOE,GCOI,CAACA,CN4DGlJ,IAAI/C,GM5DR,GN4DcgD,CM5DD,CAACjE,EAAEkN,GN4DR,GAAgB1J,EM5DV,ALyCRkE,EKzCoB6E,MN4DQ7I,ACnBpBiE,EKzCA,CAAqB,KLyCb,EDmBxB,WM5DgB,CAAlB,EAA4D,MAAM,IAAIxC,KAAJ,CAAU,uDAAV,CAAN;AN6D1D,AKjEF,ACKA,ALwC0B,MKxCpBwH,EN4DEzI,CKjEDiI,MAAP,KLiEqB1I,CM5DAzD,EAAEkN,IN4DKvJ,IM5DP,CN4DD,CM5DajC,EN4DIsC,CAAnC,CM5DmB,CAAiB,YAAjB,EAA+B,CAA/B,CAArB;AN6DE,AOrEJ,AFIC,ACKC,CDXF,GEEMwK,EDSA,CAAC7B,CN4DGxI,UAAUD,CM5DlB,CCToB,CDSD,MAAM,ECTrBsK,CPqE0B3K,CM5DDsB,IN4D3B,CM5DuB,CAAU,KCTf,GAAM,KDSD,CAAN;AN6DjB,AOrEF,ADSA,ALuCE,MMhDIsJ,ADSAtB,EN4DE/I,SM5DSpE,CCTCA,CPqEEmE,AM5DDwI,CCTC,SPqEUnM,EM5Db,CN4DE,CM5DckB,EN4DIqC,EM5DpB,CAAqB,CN4DpC,AOrEgB,CAAlB,SDSiB,EAAkC,CAAlC,CAAjB;AN6DE/D,AOrEF,AFIF,ACKE,ALuCE,II5CE0M,ELiEApJ,AOrEA,ADSA,CCTCmL,ADSAtB,EN4DH,EAAOvM,GAAP,CAAW,AM5Db,CCTA,CDSe,CCTC,KDSK,ECTE,CPqErB,CM5DuBuE,CN4DCf,EOrEV,AFIc,ECKT,CAAU,GN4D7B,GKjEEsI,MCKiB,CAAN,gBDLe,CAACC,YAAD,EAAkB;ALkE9C3M,AOrEFA,AFIA,ACKA,ALuCE,IMhDAyO,EPqEE,AKjEA,ACKEpC,CDLDM,KLiEH,COrEF,CPqEY/L,COrECX,EPqEX,CAAc,COrEhB,AFII,CLiEcsC,AOrEA,CDSGvC,EDLA,ACKE2M,CDLD3M,EAAE2M,ELiEE,EOrEPzM,KAAD,ADSG,ECTKgN,ADSWxL,CN4DrB,AKjEM,ELiEpB,AKjEoC6K,CCKjB,CAAqB,GCTxB,EAAqB,CFIjB,CAAyB,SCK1B,EDLC,ACKsC,CDL5D,ACKqB,CAArB,CDL6D,MAAM,IAAIK,cAAJ,CAAmB,4DAAnB,CAAN;ALkE3D,AOrEA5M,AFIF,ACKA,ALuCE,MMhDEkN,AFIEnN,ACKF,CAACsM,GLuCC,CDqBG7K,ACrBFkG,GMhDL,CPqEA,COrEYrH,AFIEL,CJ4CV,CI5CY2M,CCKlB,CCTE,CAAiB,ADSA,ALuCD,IMhDhB,EDSuB,CLuCAjF,EI5CT,CCKavC,CDLGzD,EJ4Cd,EI5CF,ACKS,CDLY,ACKF,ELuCC,EMhDCxB,IFIrB,CEJd,AFIF,CJ4CE,EAA6C,KKvCtB,CAAN,ALuCkC,IAAIsF,SAAJ,CAAc,eAAd,CAAN;ADsB9C,AOrEC,AFIF,ACKA,ALuCE,GDQF,GKpDI,ACKEsI,CDLD/N,GJ4CC4H,II5CN,EAAc,ACKE3H,EAAEkN,ELuCD,EI5CG,IAAI/H,ACKR,EAAYzD,ALuCJiG,GI5CJ,CEJDuF,AFIW,ACKd,CAAiB,CLuChB,MMhDf,gBDSc,CAAhB,gBDLoB,CAAN,CJ4CUvF,MAAP,OAAkB,QAAjC,EAA4C,MAAM,IAAInC,SAAJ,CAAc,YAAd,CAAN;ADsB/C,AOrEG,AFIFzF,ACKA,ALuCE,CDDJ,KMtCM,CAAC+N,GDLG7N,AJ4CA2H,II5CR,ACKA,CDLa,CCKC,OAAO,EDLP1H,AJ4CS,EAArB,CKvCY,EDLD,EAAQiM,EEJAe,IFIR,EAAmB,EEJ9B;AACD,AFIClN,ACKF8N,ALuCElG,GMpDF,GFQIuE,ICKIlM,EDLN,EAAU4C,ACKZ,CAAa,CDLX,CAAa,EJ4CA0E,II5Cb,EAAqB,ACKTrH,ALuCZ,GAAsByH,EKvCX,EAAQrG,KDLQ,CCKhB,ALuCqBqG,EKvCF,KLuCSJ,MAAvC;ADsBJ,AOrEE,AFII2E,ACKFlM,ALuCA,IDqBEqE,EM5DA/C,GCTGmN,CNgDC1I,EKvCN,EAAUlD,EAAV,CAAa,CCTf,MDSE,ALuCoB,CDqBG,CKjEDsJ,ACKA,GLuCG1G,GI5CvB,ELiEApB,ECrBkB,EKvCQ,CLuCO,CAAnC,YDqBuB,GAAM;AAC/B,AOrED,AFII,ACKC,ALuCF,CMzDJ,IFWI,CLmEI5B,IM5DE,CAACzC,ALuCFgG,EKvCIqG,CN4DGrM,EAAE,ECrBd,KDqBY,CAAd,CM5DS,EAAgBuM,QAAhB,CAAyB,MAAzB,CAAL,EAAuC;AN6D3C,AKjEC,ACI4CvM,ALwC3C,GIhDF,GLqEI,CAACyC,GM7D0C4J,ALwCvCpG,EDqBR,EAAY,MCrBM,CDqBC,CM7D0B,EAAgBtD,ALwCvCuD,EDqBV,KCrBM,CKxC2B,ALwCf,CKxCwC,MAAzB,GLwCdC,OAAD,EAAUC,MAAV,EAAqB;ADsBnD,AKjEA,ACGgF,ALyC5E,MDqBE1D,GKjECiK,GJ4CGtG,IDqBMrG,EAAE,AOrELwO,GFIb,CJ4CoBjK,GDqBJ,EAAW5B,KCrBG2D,GDqBd,CAAoB,ACrBhB,CAAe,OAAKjB,CDqBxB,CAAhB,UCrBoB,EAAkCU,WAAlC,CAAhB;ADsBJ/F,AKjED,ACGKA,ALyCAqG,CItDN,GL2EI5D,IOrEK4L,ADODlB,CN8DN,EAASlN,IAAT,CAAc,AM9DV,ALyCQsG,EKzCIiG,GCPT6B,INgDH,CDqBWnO,ECrBS,CKzCpB,CAAwB,CN8Dd,EAAQsB,GM9DlB,CN8DU,EAAiB,CCrBD;ADsB5B,AM9DC,ALyCG,KK5CJ,GNiEM6B,AOtEWiL,SNiDR9H,KAAL,CAAWH,EDqBQrG,EAAEwB,COtER8M,GPsEM,ACrBA7H,EDqBQ/E,IAAR,ACrBnB,CDqBgC,cAAb,EAA6B,CAA7B,CAAvB;AACA,AKjEJ,ACGG,ALyCK,GK9CN,CDEImL,ILiEE,AOvEgC0B,CPuE/BlL,QCrBIiC,II5CU,ELiEnB,EAAqB,ACrBjB,CMlDgCiJ,ANkDlB5I,II5ChBkH,EJ4CE,GAAuB,IAAvB,KI5Ce,CAACC,MAAD,EAAY;ALkE/B,AKjEF,ACGA,ALyCM3G,MI5CF,CAAC2G,CLiEGlK,CM9DDsK,IDHP,EAAa,ECGb,CLyCc,GI5CK,CLiEG9J,GKjEC+B,AJ4CJG,KI5CA,CAAU,EJ4CvB,EDqB6B9D,IAAb,CAApB,cKjEiB,CAAN;ALkEXxB,AKjEF,ACGD,ALyCM,CK1DP,KN+EMqD,GCzBA,WDyBF,EAAkBR,EAAlB,CAAqB,WAArB,EAAkC,UAAC5B,KAAD,EAAW;AAC3CA,AKjEJ,AJ4CIoF,MI5CE0G,MLiEIjK,ICrBE4D,GI5CO1G,EAAE8M,EJ4CjB,GAAkB,CDqBlB,AKjEe,EAAUvJ,OAAV,AJ4CItC,CI5Cc,IJ4Cf,EAAW,QI5Cd,EAAkC,CAAlC,CAAnB;ALkEIA,AKjEJ,ACGF,ALwCqCmF,IKxC/B6H,EDHA,CAAClB,KLiEKhK,KKjEV,AJ2C0C9B,EI3CzB,IJ2C+B0F,EI3CzB,CLiEnB,GKjEuBxB,AJ2Ce,CAAayB,CKxCxB,GDHR,CAAU,AJ2CE,KKxC/BqH,wBAA2B,CAACf,QAAD,CDHR,CAAN,ACG4B;AN+DzC,AKjEJ,ACGA,ALuCgE,MI1C1DF,ACGF,CAACE,ELuCD,CDuBIlM,IKjEMhB,CCGV,CDHY+M,GCGC,CAAC/M,EAAEkN,GN8DGjM,CKjET,EAAcS,ELiEpB,AM9DU,EDHJ,ACGgB6K,CDHG,GLiEC,IM9DhB,CAAqB,CN8DnC,EAAsC,OKjE5B,EAAuC,CAAvC,CAAd,ICGkB,CAAlB,EAA4D,MAAM,IAAI/G,SAAJ,CAAc,mCAAd,CAAN;AN+DtDxF,AKjEN,ACGA,ALuCIqG,MI1CA,ACGE6H,CDHDlB,GLiEGhK,EKjER,EAAY,CCGGhD,CLuCH6G,CKvCKqG,CN8DX,EAAYrK,AKjEA,ELiEZ,CAAe,CKjECsC,CCGP,EAAYzD,EDHT,CAAU,CCGb,ALuCX,CKvC4B,EN8D1B,ACvBwB,EDuBIkB,QCvBH3B,EKvChB,CN8DT,CM9D0C,CAAjC,ALuCe,CKvC9B,CLuCyC,cI1CvB,CAAN;ALkEP,AKjEL,ACGA,ALuCM,MI1CAgM,ACGF,CAACiB,KDHOlO,CCGZ,CDHcgN,AJ0CFnF,CKvCC,IDHD,AJ0CK5G,EI1CIgM,ACGF,GDHP,CCGWzH,ALuCAmB,CI1CvB,KJ0CiB,CAAaF,EKvCX,CAAc,GLuC3B,YKvCa,CAAN;AN+DTzG,AKjEJ,ACGA,ALuCM,MI1CA+K,ACGAgC,EN8DArK,IKjEM,EJ0CAoE,CDuBR,EAAW7D,EM9DIjD,ALuCFiB,EKvCIiM,ILuCEvG,IDuBnB,AM9De,CN8DS,CM9DGjF,ALuCd,CAAaqF,GI1CN,ACGL,CN8Df,AM9DgC,OLuC9B,OKvCa,EAAiC,CAAjC,CAAnB,EDHkCkG,GAAV,CAAZ,8CAAsEA,GAAlF;ALkEG,AKjEH,ACGA,ALuCM,KDgBJ,CMvDE,CAACiB,MAAL,EAAa,ELuCF5I,II1CFwF,ACGU,IAAItF,ALuCjB,GAAgBqC,EAAhB,EI1CN,CAAqBkD,CCGF,CAAc,CDHjC,WCGmB,CAAN;AN+DX/K,AKjEF,ACGA,ALuCM,MDuBFgD,AM9DEgK,QN8DJ,AM9DYhN,EN8DA6C,AM9DEkK,CLuCLtH,CDuBT,CAAe,KCvBX,EKvCQ,CLuCO,CDuBnB,AM9D0B/D,EN8DA,EM9Dd,CAAmB,CLuCP4D,QDuBQ,ACvBb,CAAcG,OAA7B,CKvCQ,EAAuC,CAAvC,CAAd;AN+DIzF,AKjEJ,ACGA,ALuCM,MI1CAkN,ACGF,CAACF,CN8DC,IM9DN,EN8DI,AM9DQ,ALuCAlF,EDuBElH,CKjEGZ,ELiEb,AKjEe8M,CLiED,AM9DA,EN8DEvK,ACvBCuE,EKvCCtB,CDHL,EAAUjC,CJ0CAuD,EDuBC,CCvBEE,EKvCZ,CDHD,ACGe,CDHG,ILiEjB,EAAd,MCvBuB,CKvCT,ALuC6BC,CKvCnC,KDHK,EAAuC,AJ0C7B,CI1CV,AJ0CuC,CI1CxD,MJ0C6D7B,IAAlC,CAAP,GACV0B,GAAGO,WAAH,CAAe,OAAKjC,IAApB,CADU,GAEVyC,GAAGX,iBAAH,CAAqB,OAAK9B,IAA1B,EAAgC,EAAE+B,SAAS,IAAX,EAAiBC,eAAe,IAAhC,EAAhC,CAFJ;ADwBFpH,AKjEJ,ACGA,ALyCM,MI5CF,ACGE8M,CDHDI,CLiEClK,MCrBI,CI5CV,ACGehD,ALyCJ8H,CDqBP,CKjEW,ACGEiF,CN8DD7J,GAAZ,ACrBa6E,CDqBG,CKjEC,IAAIvC,ACGV,EAAc9D,ELyClB,CAAiBuF,CDqBxB,AM9DW,CAAmB,CN8DDrE,CKjEZ,CAAc,GJ4CxB,CAA0B,IAA1B,CDqBP,ACrBE,EAAsC,OKzC7B,EAA0C,CAA1C,CAAf,aDHqB,CAAN;ALkEX,AKjEJ,ACGA,ALyCQkF,MI5CF6E,ACGF,CAACG,MAAL,EAAa,GLyCCxF,GI5COtH,ACGF,EDHIkN,ECGA1H,ILyCf,CAAkB,CI5CL,EAAY9D,CCGd,ALyCX,CKzCyB,CLyCD,CI5CX,CAAiB,EJ4C9B,EAA8B,EAAE6F,IKzCrB,CAAN,CDHQ,EAA+B,AJ4CJ,CI5C3B,CAArB,EJ4CsC,EAA9B;ADsBJvH,AKjEJ,ACGAA,ALyCO,IKzCL8M,EDHE,CAACH,CLiEC,EM9DN,EAAU9J,EAAV,CAAa,GN8DT,CKjEJ,CLiEkBM,CKjEC,CCGnB,EAAsB,EN8DlB,CKjEqB,IAAIgC,KAAJ,ACGG,CDHO,gCAAV,CAAN;ALkEhB,AKjEH,ACGE,ALyCI,KDgBJ,CK5DIgI,QJ4CI,CAACrF,EI5CM9H,EAAE2M,EJ4CF5E,UI5CA,AJ4CN,CAAiBd,CI5CKvF,IAAhB,CAAqB,ACGrBoL,ELyCN,CAA0BpF,GKzCnC,GLyCS,CAAL,EAAwC,QI5C7B,EAA2C,CAA3C,CAAjB;ALkEC,AKjED,ACGC,ALyCOI,GDGR,AM9CA,GDDI,CAACqF,QAAL,EAAe,CJ4CD7F,KI5CO,IAAInC,EJ4CjB,CAAkBuC,EI5CL,CAAU,GJ4CvB,EAA0BA,MAA1B,EAAkC,EAAEH,QAAQK,aAAaL,II5C5C,CAAN,CJ4C2B,EAAlC;ADsBR,AKjEA,ACGA,ALyCO,MI5CD8E,GLiEC5J,KAAP,OKjEqBzC,EAAE2M,YAAF,EAAgBjL,ECGnBsL,EDHG,CAAqB,ECG1C,cDHqB,EAAuC,CAAvC,CAArB;ALkED,AKjEC,ACGA,ALyCK,CDHP,KKzCM,CAACX,ECGEa,AL2BH,QK3BJ,EDHA,EAAmB,MAAM,IAAI/H,KAAJ,CAAU,8CAAV,CAAN;AACnB,ACGD,ALyCI,CKxDL,MLiCoB,CAAhB;AD6CJ,AKjEE,AJ4CE,IDqBEb,EKjEEgI,OJ4CGrG,GI5COjG,CLiEC,CKjECqM,EJ4ChB,MDqBE/H,IKjEY,EAAgB5C,ILiEf,AKjED,CAAqB,ELiEd,eKjEP,EAAwC,CAAxC,CAAhB;ALkEAc,AKjEA,ACGF,ALyCG,IKzCG2L,EDHA,mBCGqB,SAArBA,kBAAqB,CAACjB,QAAD,EAAc;AN+DvC7I,AKjEE,ACGF,MAAI,CAAC6I,CDHC,CAACZ,MCGH,CDHF,EAAc,CCGC,CAACtM,EAAEkN,EDHE,IAAI/H,ECGR,EAAYoH,CDHR,CAAU,MCGd,CAAqB,kBAArB,CAAlB,EAA4D,IDHtC,CAAN,CCGkD,IAAIpH,KAAJ,CAAU,uDAAV,CAAN;AN+D7D,AKjEE,ACGD,CN2DF,EKhEE,CAEE,ECGIiJ,KDHGxH,KAAP,EAAc,KCGO5G,EAAEkN,QAAF,EAAYxL,IAAZ,CAAiB,aAAjB,CAAvB;ADFE1B,ACGF,MDHIqM,ACGA,CAAC+B,WDHH,EAAgBnC,CCGlB,EAAqB,GDHnB,CAAuBH,ECGE,IAAI3G,ALwClBuC,KKxCc,CAAU,ELwChB,EI3CnB,8DCGyB,CAAN;ADFpB,ACGDsG,ALuCqB,kBDuBR1J,GM9DM4I,QAAnB;ADFA,ACGAW,MDHM1B,SAASnM,EAAEqM,GCGCa,QAAlB,CDHe,EAAgBxL,IAAhB,CAAqB,QAArB,EAA+B,CAA/B,CAAf;AACA,ACGAuM,ALsCE,MIzCE,qBCGqBf,QAAzB;ADFE,ACGF,ALsCE,QIzCI,CAACf,ACGA,IAAP,EDHE,EAAa,MAAM,IAAIhH,KAAJ,CAAU,+BAAV,CAAN;AACd,ACGF,ALsCG,CK9CJ,EDGE,CAEE,MJyCI,CIzCGyB,AJyCFc,KIzCL,CJyCI,CIzCU,GJyCE,OAAOA,MAAP,KAAkB,QAAlC,EAA6C,MAAM,IAAIlC,SAAJ,CAAc,eAAd,CAAN;AIxC7CxF,AJyCA,MIzCEq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","file":"index.map","sourceRoot":"../windowing/assets/scripts","sourcesContent":["const resetIframeHeight = () => {\n  const iframes = $('iframe');\n  if (!iframes) return false;\n  iframes.each((index, element) => {\n    const height = $(element).attr('height') || '';\n    const perHeight = height.match(/\\d+%$/);\n    if (!perHeight) { return; }\n    const per = parseInt(perHeight, 10);\n    const cssHeight = $(element).parent().height() * (per / 100);\n    $(element).css('height', `${cssHeight}px`);\n  });\n  return iframes;\n};\n\nconst supportIframeHeight = () => {\n  resetIframeHeight();\n  window.onresize = () => {\n    resetIframeHeight();\n  };\n};\n\nexport { resetIframeHeight, supportIframeHeight };\n","import { resetIframeHeight } from './supportIframeHeight';\n\nconst getMouseButton = (event) => {\n  if (!event || (event instanceof MouseEvent)) return false;\n  const isIE = (navigator.appName === 'Microsoft Internet Explorer');\n  let button = 'right';\n  switch (event.button) {\n    case 0:\n      button = 'left';\n      break;\n    case 1:\n      button = (isIE) ? 'left' : 'middle';\n      break;\n    case 4:\n      button = 'middle';\n      break;\n    default:\n      button = 'right';\n      break;\n  }\n  return button;\n};\n\nconst dragCardHeader = (card) => {\n  if (!card) return false;\n  const cardHeaderDrager = $(card).find('.header-drager')[0];\n  const cardHeader = $(card).find('.card-header')[0];\n  const cardBody = $(card).find('.card-body')[0];\n  if (!cardHeaderDrager || !cardHeader || !cardBody) return false;\n  const top = cardHeader.offsetTop;\n  let cardHeaderMinHeight = 25;\n  const cardHeaderLastChild = cardHeader.lastElementChild;\n  if (cardHeaderLastChild) {\n    const cardHeaderLastChildHeight = cardHeaderLastChild.offsetHeight;\n    const cardHeaderLastChildTop = cardHeaderLastChild.offsetTop;\n    cardHeaderMinHeight = cardHeaderLastChildHeight + cardHeaderLastChildTop;\n  }\n  return (event) => {\n    let height = event.clientY - top;\n    if (height < cardHeaderMinHeight) {\n      height = 0;\n      $(cardHeader).css({ display: 'none' });\n    } else {\n      $(cardHeader).css({ display: '' });\n    }\n    $('body').css({ cursor: 'n-resize' });\n    $(cardHeader).css({ height: `${height}px` });\n    return card;\n  };\n};\n\n\nconst bindCardHeaderDrager = () => {\n  const cards = $('.card');\n  if (!cards) return false;\n  const curtain = $('<div>').addClass('curtain');\n  $(cards).each((index, card) => {\n    const cardHeaderDrager = $(card).find('.header-drager')[0];\n    if (!cardHeaderDrager) return;\n    const dragHandler = dragCardHeader(card);\n    $(cardHeaderDrager).on('mousedown', (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n      if (getMouseButton(event) === 'left') {\n        $(document).on('mousemove', dragHandler);\n      }\n      $(curtain).insertBefore('#app');\n    });\n    $(document).on('mouseup', () => {\n      $('body').css({ cursor: 'default' });\n      $(document).off('mousemove', dragHandler);\n      resetIframeHeight();\n      $('.curtain').remove();\n    });\n  });\n  return cards;\n};\n\nconst dragCardLeft = (card) => {\n  if (!card) return false;\n  const cardLeftDrager = $(card).find('.left-drager')[0];\n  const cardHeader = $(card).find('.card-header')[0];\n  const cardBody = $(card).find('.card-body')[0];\n  const col = $(card).parents('.col')[0];\n  const container = $(col).parent()[0];\n  if (!cardLeftDrager || !cardHeader || !cardBody || !col || !container) return false;\n  return (event) => {\n    const left = col.offsetLeft;\n    const width = col.clientWidth;\n    const total = container.offsetWidth;\n    const per = width / total;\n    const grow = $(col).css('flex-grow');\n    const x = event.clientX - container.offsetLeft;\n    const goalWidth = (left + width) - x;\n    const goalPer = goalWidth / total;\n    const goalGrow = (goalPer / per) * grow;\n    $(col).css('flex-grow', goalGrow);\n    $('body').css({ cursor: 'e-resize' });\n    return card;\n  };\n};\n\nconst bindCardLeftDrager = () => {\n  const cards = $('.card');\n  if (!cards) return false;\n  const curtain = $('<div>').addClass('curtain');\n  $(cards).each((index, card) => {\n    const cardLeftDrager = $(card).find('.left-drager')[0];\n    if (!cardLeftDrager) return;\n    const dragHandler = dragCardLeft(card);\n    $(cardLeftDrager).on('mousedown', (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n      if (getMouseButton(event) === 'left') {\n        $(document).on('mousemove', dragHandler);\n      }\n      $(curtain).insertBefore('#app');\n    });\n    $(document).on('mouseup', () => {\n      $('body').css({ cursor: 'default' });\n      $(document).off('mousemove', dragHandler);\n      resetIframeHeight();\n      $('.curtain').remove();\n    });\n  });\n  return cards;\n};\n\nconst bindDrager = () => {\n  bindCardHeaderDrager();\n  bindCardLeftDrager();\n};\n\nexport default bindDrager;\n","\nconst indexedDB = window.indexedDB ||\n  window.mozIndexedDB ||\n  window.webkitIndexedDB ||\n  window.msIndexedDB;\nconst IDBTransaction = window.IDBTransaction ||\n  window.webkitIDBTransaction ||\n  window.msIDBTransaction;\nconst IDBKeyRange = window.IDBKeyRange ||\n  window.webkitIDBKeyRange ||\n  window.msIDBKeyRange;\n\nclass Store {\n  constructor(storeName) {\n    if (!indexedDB || !IDBTransaction || !IDBKeyRange) throw new Error('您的浏览器不支持indexedDB');\n    this.name = this.name || storeName;\n    this.databaseName = 'myEncapsulation';\n    return this;\n  }\n\n  setDB(database) {\n    if (!database || !(database instanceof IDBDatabase)) throw new TypeError('参数应是数据库对象');\n    this.database = database;\n    this.version = this.database.version;\n    this.database.onclose = () => {\n      this.database.isOpen = false;\n    };\n    return database;\n  }\n\n  closeDB() {\n    return this.database && (this.database instanceof IDBDatabase) && this.database.close();\n  }\n\n  openDB(version) {\n    // openDB()\n    // openDB(version) version是版本号 int类型 例如openDB(99)\n    // 返回值 promise 对象 resolve(this.database) reject(error);\n    if (version) {\n      if (!Number.isSafeInteger(version)) throw new TypeError('版本号只能是整数');\n      if (version < this.version) throw new TypeError('新版本号不能比当前版本号低');\n    }\n    const openVersion = (version && Number.isSafeInteger(version) && (version > this.version))\n      ? version : this.version;\n    this.closeDB();\n    const promise = new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.databaseName, openVersion);\n      request.onsuccess = () => {\n        this.setDB(request.result);\n        this.database.isOpen = true;\n        resolve(this.database);\n      };\n      request.onerror = (event) => { reject(event.target.error); };\n      request.onupgradeneeded = (event) => {\n        this.setDB(event.target.result);\n        const tx = event.target.transaction;\n        if (!tx.objectStoreNames.contains(this.name)) {\n          this.database.createObjectStore(this.name, { keyPath: 'id', autoIncrement: true });\n          tx.objectStore(this.name).createIndex('id', 'id', { unique: true });\n        }\n      };\n    });\n    return promise;\n  }\n\n  ready() {\n    return this.openDB().then(database => this.setDB(database));\n  }\n\n  isReady() {\n    return this.database && (this.database instanceof IDBDatabase) && this.database.isOpen;\n  }\n\n  addColumn(column, option) {\n    // addColumn(columnName) columnName是索引名,String类型,如addColumn('age')\n    // addColumn(columnName, option) option目前只能指定是否去重复,如addColumn('name', { unique: true })\n    // 返回值promise resolve(database) database是示例对象的database属性\n    if (!column || (typeof column !== 'string')) throw new TypeError('索引名称必须存在且为字符串');\n    if (option && (typeof option !== 'object')) throw new TypeError('索引选项应是对象类型');\n    const columnOption = {};\n    columnOption.unique = option && option.unique;\n    const openVersion = this.version + 1;\n    this.closeDB();\n    const promise = new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.databaseName, openVersion);\n      request.onsuccess = () => {\n        this.setDB(request.result);\n        this.database.isOpen = true;\n        resolve(this.database);\n      };\n      request.onerror = (event) => { reject(event.target.error); };\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        const tx = event.target.transaction;\n        this.database = db;\n        this.version = this.database.version;\n        const store = (tx && tx.objectStoreNames.contains(this.name))\n          ? tx.objectStore(this.name)\n          : db.createObjectStore(this.name, { keyPath: 'id', autoIncrement: true });\n        if (!store.indexNames.contains('id')) {\n          store.createIndex('id', 'id', { unique: true });\n        }\n        if (!store.indexNames.contains(column)) {\n          store.createIndex(column, column, { unique: columnOption.unique });\n        }\n      };\n    });\n    return promise;\n  }\n\n  deleteColumn(column) {\n    // deleteColumn(column) columnName是索引名,String类型,如deleteColumn('userName')\n    // 返回值promise resolve(database) database是示例对象的database属性\n    if (!column || (typeof column !== 'string')) throw new TypeError('需要一个字符串类型的索引名');\n    this.closeDB();\n    const openVersion = this.version + 1;\n    const promise = new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.databaseName, openVersion);\n      request.onsuccess = () => {\n        this.setDB(request.result);\n        this.database.isOpen = true;\n        resolve(this.database);\n      };\n      request.onerror = (event) => {\n        this.database = request.result;\n        this.version = request.result.version;\n        this.database.close();\n        reject(event.target.error);\n      };\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        const tx = event.target.transaction;\n        this.database = db;\n        this.version = this.database.version;\n        const store = (tx && tx.objectStoreNames.contains(this.name))\n          ? tx.objectStore(this.name)\n          : db.createObjectStore(this.name, { keyPath: 'id', autoIncrement: true });\n        if (!store.indexNames.contains('id')) {\n          store.createIndex('id', 'id', { unique: true });\n        }\n\n        if (store.indexNames.contains(column)) {\n          store.deleteIndex(column);\n        }\n      };\n    });\n    return promise;\n  }\n\n  addColumns(columns) {\n    // addColumns(['userName'])\n    // addColumns([{ index: 'userAge', unique: false }])\n    // addColumns(['userName', { index: 'userAge', unique: false }])\n    // 返回值promise resolve(database) database是示例对象的database属性\n    if (!columns || !(columns instanceof Array)) throw new TypeError('列名组应该是一个数组');\n    const newColumns = [];\n    columns.forEach((column) => {\n      const columnType = typeof column;\n      if (columnType === 'string') {\n        newColumns.push({ index: column, unique: false });\n      } else if (columnType === 'object') {\n        newColumns.push({ index: column.index, unique: column.unique });\n      } else {\n        throw new TypeError('索引列格式错误');\n      }\n    });\n    this.closeDB();\n    const openVersion = this.version + 1;\n    const promise = new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.databaseName, openVersion);\n      request.onsuccess = () => {\n        this.setDB(request.result);\n        this.database.isOpen = true;\n        resolve(this.database);\n      };\n      request.onerror = (event) => {\n        this.database = request.result;\n        this.version = request.result.version;\n        this.database.close();\n        reject(event.target.error);\n      };\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        const tx = event.target.transaction;\n        this.database = db;\n        this.version = this.database.version;\n        const store = (tx && tx.objectStoreNames.contains(this.name))\n          ? tx.objectStore(this.name)\n          : db.createObjectStore(this.name, { keyPath: 'id', autoIncrement: true });\n        if (!store.indexNames.contains('id')) {\n          store.createIndex('id', 'id', { unique: true });\n        }\n        newColumns.forEach((column) => {\n          if (!store.indexNames.contains(column.index)) {\n            store.createIndex(column.index, column.index, { unique: column.unique });\n          }\n        });\n        this.database = db;\n      };\n    });\n    return promise;\n  }\n\n  deleteColumns(columns) {\n    // demo.deleteColumns(['userName', 'userAge'])\n    // 返回值promise resolve(database) database是示例对象的database属性\n    if (!columns || !(columns instanceof Array)) throw new TypeError('需要一个包含索引名的数组');\n    columns.forEach((column) => {\n      if (!column || (typeof column !== 'string')) throw new TypeError('索引名不是字符串类型');\n    });\n    this.closeDB();\n    const openVersion = this.version + 1;\n    const promise = new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.databaseName, openVersion);\n      request.onsuccess = () => {\n        this.setDB(request.result);\n        this.database.isOpen = true;\n        resolve(this.database);\n      };\n      request.onerror = (event) => {\n        this.database = request.result;\n        this.version = request.result.version;\n        this.database.close();\n        reject(event.target.error);\n      };\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        const tx = event.target.transaction;\n        this.database = db;\n        this.version = this.database.version;\n        const store = (tx && tx.objectStoreNames.contains(this.name))\n          ? tx.objectStore(this.name)\n          : db.createObjectStore(this.name, { keyPath: 'id', autoIncrement: true });\n        if (!store.indexNames.contains('id')) {\n          store.createIndex('id', 'id', { unique: true });\n        }\n        columns.forEach((column) => {\n          if (store.indexNames.contains(column)) {\n            store.deleteIndex(column);\n          }\n        });\n      };\n    });\n    return promise;\n  }\n\n  deleteItem(id) {\n    // deleteItem(id) id是目标数据的id属性值 Integer类型,如deleteItem(1)\n    // 返回值promise resolve(undefined)\n    if (!Number.isSafeInteger(id)) throw new TypeError('参数只能是目标数据的id属性值');\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    const store = this.database.transaction(this.name, 'readwrite').objectStore(this.name);\n    const promise = new Promise((resolve, reject) => {\n      const request = store.delete(id);\n      request.onsuccess = () => { resolve(request.result); };\n      request.onerror = (event) => { reject(event.target.error); };\n    });\n    return promise;\n  }\n\n  deleteItems(ids) {\n    // deleteItems(ids) ids是由id组成的数组 Array类型,如deleteItems([1,2,3])\n    // 返回值promise resolve(undefined)\n    if (!(ids instanceof Array) || (ids.length === 0)) throw new TypeError('参数只能是目标数据的id属性值组成的数组且不能为空');\n    ids.forEach((id) => {\n      if (!Number.isSafeInteger(id)) throw new TypeError('id属性值应是整数');\n    });\n    let promise = this.ready();\n    ids.forEach((id) => {\n      promise = promise.then(() => this.deleteItem(id));\n    });\n    return promise;\n  }\n\n  delete(args) {\n    // delete(id) id是目标数据的id属性值 Integer类型,如delete(1)\n    // delete(ids) ids是由id组成的数组 Array类型,如delete([1,2,3])\n    // 返回值promise resolve(undefined)\n    const isInt = Number.isSafeInteger(args);\n    const isArray = args instanceof Array;\n    if (!isInt && !isArray) throw new TypeError('参数只能是目标数据的id属性值或由id组成的数组');\n    let promise;\n    if (isInt) {\n      promise = this.deleteItem(args);\n    } else if (isArray) {\n      promise = this.deleteItems(args);\n    }\n    return promise;\n  }\n\n  setItem(item) {\n    // setItem(item) item插入的条目, Object类型,如 setItem({ id: 3, name: 'xiaoming', age: 10 })\n    // 使用id属性为主键，可以设置item.id属性值(Integer类型)为插入的主键,若item.id不合法则自动分配id属性\n    // 返回值是promise\n    // resolve() 输出保存后的item.id\n    if (!item || (typeof item !== 'object')) throw new TypeError('参数只能是一个对象');\n    if ((item.id !== undefined) && !Number.isSafeInteger(item.id)) throw new TypeError('参数的id属性只能为整数');\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    const store = this.database.transaction(this.name, 'readwrite').objectStore(this.name);\n    const promise = new Promise((resolve, reject) => {\n      const request = store.put(item);\n      request.onsuccess = () => { resolve(request.result); };\n      request.onerror = (event) => { reject(event.target.error); };\n    });\n    return promise;\n  }\n\n  setItems(items) {\n    // setItems(items) items是由欲插入条目组成的数组，Array类型,如[{id:1, age:12}, {name: 'x', age: 12}]\n    // 返回值是promise\n    // resolve() 输出最后保存的item.id\n    if (!items || !(items instanceof Array)) throw new TypeError('参数应是一个数组');\n    items.forEach((item) => {\n      if (!item || (typeof item !== 'object')) throw new TypeError('参数只能是一个对象');\n    });\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    let promise = this.ready();\n    items.forEach((item) => {\n      promise = promise.then(() => this.setItem(item));\n    });\n    return promise;\n  }\n\n  set(args) {\n    // set(item) 调用setItem(item)\n    // set(items) 调用setItems(items)\n    const isArray = args instanceof Array;\n    const isObj = (typeof args === 'object');\n    if (!isObj && !isArray) throw new TypeError('参数只能是目标数据的id属性值或由id组成的数组');\n    let result;\n    if (isArray) {\n      result = this.setItems(args);\n    } else if (isObj) {\n      result = this.setItem(args);\n    }\n    return result;\n  }\n\n  getItem(id) {\n    // getItem(id) id是目标数据的id属性值 Integer类型,如getItem(1) 拿到id是1的数据\n    // 返回值promise resolve(item) item是结果条目或undefiend\n    if (!Number.isSafeInteger(id)) throw new TypeError('参数只能是目标数据的id属性值');\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    const store = this.database.transaction(this.name, 'readwrite').objectStore(this.name);\n    const promise = new Promise((resolve, reject) => {\n      const request = store.get(id);\n      request.onsuccess = () => { resolve(request.result); };\n      request.onerror = (event) => { reject(event.target.error); };\n    });\n    return promise;\n  }\n\n  getItems(ids) {\n    // getItems(ids) ids是由id组成的数组 Array类型,如getItems([1,2,3])\n    // 返回值promise resolve(items) items是由结果组成的数组\n    if (!(ids instanceof Array) || (ids.length === 0)) throw new TypeError('参数只能是目标数据的id属性值组成的数组且不能为空');\n    ids.forEach((id) => {\n      if (!Number.isSafeInteger(id)) throw new TypeError('id属性值应是整数');\n    });\n    const sortIds = ids.sort();\n    const range = IDBKeyRange.bound(sortIds[0], sortIds[sortIds.length - 1]);\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    const store = this.database.transaction(this.name, 'readwrite').objectStore(this.name);\n    const promise = new Promise((resolve, reject) => {\n      const request = store.getAll(range);\n      request.onsuccess = () => { resolve(request.result); };\n      request.onerror = (event) => { reject(event.target.error); };\n    });\n    const resPromise = promise.then((items) => {\n      const result = [];\n      items.forEach((item) => {\n        if (sortIds.includes(item.id)) {\n          result.push(item);\n        }\n      });\n      return result;\n    });\n    return resPromise;\n  }\n\n  get(idQuery) {\n    // get(id) id是目标数据的id属性值 Integer类型,如get(1) 调用getItem(id)\n    // 返回值promise resolve(item) item是查询结果或undefiend\n    // get(ids) ids是由id组成的数组 Array类型,如get([1,2,3]) 调用getItems(ids)\n    // 返回值promise resolve(items) items是查询结果组成的数组\n    const isInt = Number.isSafeInteger(idQuery);\n    const isArray = idQuery instanceof Array;\n    if (!isInt && !isArray) throw new TypeError('参数只能是目标数据的id属性值或由id组成的数组');\n    let promise;\n    if (isInt) {\n      promise = this.getItem(idQuery);\n    } else if (isArray) {\n      promise = this.getItems(idQuery);\n    }\n    return promise;\n  }\n\n  getAll(indexName) {\n    // getAll(indexName) indexName参数是索引名,如getAll('id')\n    // 返回值promise resolve(items) items是所有存在indexName列的数据组成的数组\n    const openIndexName = indexName || 'id';\n    if (typeof openIndexName !== 'string') throw new TypeError('索引名只能是字符串');\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    const store = this.database.transaction(this.name, 'readwrite').objectStore(this.name);\n    const index = store.index(openIndexName);\n    const promise = new Promise((resolve, reject) => {\n      const request = index.getAll();\n      request.onsuccess = () => { resolve(request.result); };\n      request.onerror = (event) => { reject(event.target.error); };\n    });\n    return promise;\n  }\n\n  findItems(attrQuery) {\n    // findItem(attrQuery) attrQuery是目标条目的属性值,Object类型,如findItem({id: 1, name: 'joy'})\n    // 返回值promise resolve(items) items是符合条件的条目组成的数组\n    if (!attrQuery || (typeof attrQuery !== 'object')) throw new TypeError('参数应该是一个对象');\n    if (!this.isReady()) throw new Error('数据库尚未准备好');\n    const store = this.database.transaction(this.name, 'readwrite').objectStore(this.name);\n    const keys = Object.keys(attrQuery);\n    const firstIndex = store.index(keys[0]);\n    const range = IDBKeyRange.only(attrQuery[keys[0]]);\n    const promise = new Promise((resolve, reject) => {\n      const request = firstIndex.getAll(range);\n      request.onsuccess = () => { resolve(request.result); };\n      request.onerror = (event) => { reject(event.target.error); };\n    });\n    const resPromise = promise.then((items) => {\n      const result = [];\n      items.forEach((item) => {\n        let isEqual = 1;\n        keys.forEach((key) => {\n          if (item[key] !== attrQuery[key]) isEqual = 0;\n        });\n        if (isEqual) {\n          result.push(item);\n        }\n      });\n      return result;\n    });\n    return resPromise;\n  }\n\n  static openDB(databaseName) {\n    // openDB(databaseName) databaseName是数据库名 string类型\n    // 返回值promise resolve(IDBDatabase) reject(Error)\n    if (!databaseName || (typeof databaseName !== 'string')) throw new TypeError(`数据库名不能为${databaseName}`);\n    const promise = new Promise((resolve, reject) => {\n      const request = indexedDB.open(databaseName);\n      request.onsuccess = () => {\n        const database = request.result;\n        database.isOpen = true;\n        database.onclose = () => { database.isOpen = false; };\n        resolve(database);\n      };\n      request.onerror = event => reject(event.target.error);\n    });\n    return promise;\n  }\n}\n\nexport default Store;\n","import Store from './store';\n\nconst visiteds = new Store('Visiteds');\n\nvisiteds.saveVisited = (url) => {\n  if (!url || (typeof url !== 'string')) return false;\n  const log = { date: new Date(), url };\n  return visiteds.set(log);\n};\nvisiteds.init = () => {\n  if (visiteds.init === 1) return false;\n  const init = visiteds.ready()\n    .then(() => visiteds.addColumns(['date', { index: 'url', unique: true }]))\n    .then(() => { visiteds.init = 1; });\n  return init;\n};\nvisiteds.init();\n\nexport default visiteds;\n","\n/**\n * Expose `isUrl`.\n */\n\nmodule.exports = isUrl;\n\n/**\n * RegExps.\n * A URL must match #1 and then at least one of #2/#3.\n * Use two levels of REs to avoid REDOS.\n */\n\nvar protocolAndDomainRE = /^(?:\\w+:)?\\/\\/(\\S+)$/;\n\nvar localhostDomainRE = /^localhost[\\:?\\d]*(?:[^\\:?\\d]\\S*)?$/\nvar nonLocalhostDomainRE = /^[^\\s\\.]+\\.\\S{2,}$/;\n\n/**\n * Loosely validate a URL `string`.\n *\n * @param {String} string\n * @return {Boolean}\n */\n\nfunction isUrl(string){\n  if (typeof string !== 'string') {\n    return false;\n  }\n\n  var match = string.match(protocolAndDomainRE);\n  if (!match) {\n    return false;\n  }\n\n  var everythingAfterProtocol = match[1];\n  if (!everythingAfterProtocol) {\n    return false;\n  }\n\n  if (localhostDomainRE.test(everythingAfterProtocol) ||\n      nonLocalhostDomainRE.test(everythingAfterProtocol)) {\n    return true;\n  }\n\n  return false;\n}\n","import isUri from 'is-url';\n\nconst isAliveElement = element => (element && element.nodeType === 1 && $(element).parent('html'));\n\nconst isEnterKey = event => (event.keyCode === 13);\n\nconst validateURL = (url) => {\n  if (!isUri) throw new Error('isUri 未能成功加载');\n  return (isUri(url) ? url : undefined);\n};//\n\nconst formatURL = (url) => {\n  if ((!url) || (typeof url !== 'string')) return false;\n  const hasPrefix = url.match(/^http[s]?:[/]{2}/);\n  const format = (hasPrefix) ? url : (`https://${url}`);\n  return format;\n};\n\nexport { isAliveElement, isEnterKey, validateURL, formatURL };\n","import visiteds from './indexeddb/visiteds';\nimport { isEnterKey, validateURL, formatURL } from './tool';\nimport { resetIframeHeight } from './supportIframeHeight';\n\nconst defaultLoading = () => {\n  const holder = $('<div>').addClass('absolute-center').attr('name', 'loading')[0];\n  const icon = $('<i>').addClass('fa fa-spinner fa-pulse loading fa-2x')[0];\n  $(holder).append(icon);\n  return holder;\n};\n\nconst defaultIframeAction = (iframe) => {\n  if (!iframe || (iframe.tagName !== 'IFRAME')) throw new Error('参数应该是<iframe>');\n  const iframeHolder = $(iframe).parents('.iframe-holder')[0];\n  if (!iframeHolder) throw new Error('<iframe>应该包含在<div class=\"iframe-holder\">之内');\n  const loading = $(iframeHolder).find('*[name=loading]')[0];\n  if (loading && (!$(loading).hasClass('hide'))) {\n    $(loading).addClass('hide');\n  }\n  $(iframe).removeClass('hide');\n  resetIframeHeight();\n};\n\nconst defaultIframe = () => {\n  const iframe = $('<iframe>').attr('width', '100%').attr('height', '100%').addClass('page none')[0];\n  $(iframe).on('load', () => {\n    defaultIframeAction(iframe);\n  });\n  return iframe;\n};\n\nconst bindEmbeddedBodyIframes = (embeddedBody) => {\n  if (!embeddedBody || !$(embeddedBody).hasClass('card-body')) throw new ReferenceError('bindEmbeddedBodyIframes的参数应该是一个包含class=\"card-body\"的<div>元素');\n  const iframes = $(embeddedBody).find('iframe');\n  if (!iframes) throw new Error('bindEmbeddedBodyIframes的参数元素不包含<iframe>');\n  iframes.each((index, iframe) => {\n    $(iframe).on('load', () => {\n      defaultIframeAction(iframe);\n    });\n  });\n  return embeddedBody;\n};\n\nconst embeddedSubmit = (submit) => {\n  if (!submit) throw new Error('embeddedSubmit的参数不能为空');\n  // ↓计算url\n  const inputGroup = $(submit).parents('.input-group')[0];\n  if (!inputGroup) throw new Error('submit应该有父元素<div class=\"input-group\">');\n  const input = $(inputGroup).find('input[type=text]')[0];\n  if (!input) throw new Error('submit应该有一个<input type=text>的相邻元素');\n  const val = $(input).val();\n  const url = validateURL(formatURL(val)) || `https://www.baidu.com/s?ie=UTF-8&wd=${val}`;\n  visiteds.saveVisited(url);\n  // ↓检查元素结构\n  const embedded = $(submit).parents('.embedded-control')[0];\n  if (!embedded) throw new TypeError('缺少带class=\"embedded-control\"标记的父元素');\n  const embeddedBody = $(embedded).find('.card-body')[0];\n  if (!embeddedBody) throw new Error('submit应该有class=\"card-body\"的父元素');\n  const homepage = $(embeddedBody).find('div[name=homepage]')[0];\n  if (!homepage) throw new Error('embedded 应该包含 <div name=\"homepage\">的元素');\n  const iframeHolder = $(embeddedBody).find('.iframe-holder')[0];\n  if (!iframeHolder) throw new Error('embedded 应该包含 <div class=\"iframe-holder\">的元素');\n  // ↓iframe-holder 由<div name=\"loading\"> 和 <iframe> 两个元素组成\n  const loading = $(iframeHolder).find('*[name=loading]')[0];\n  try {\n    if (!loading) throw new Error('iframeHolder 应该包含 loading 加载图标');\n  } catch (error) {\n    $(iframeHolder).append(defaultLoading());\n  }\n  const iframe = $(iframeHolder).find('iframe')[0];\n  try {\n    if (!iframe) throw new Error('iframeHolder 应该包含 <iframe> 元素');\n  } catch (error) {\n    $(iframeHolder).append(defaultIframe());\n  }\n  // ↓隐藏homepage显示iframe-holder\n  if (!$(homepage).hasClass('hide')) {\n    $(homepage).addClass('hide');\n  }\n  $(iframeHolder).removeClass('hide');\n  // ↓显示loading 隐藏未加载完成的iframe\n  $(loading).removeClass('hide');\n  if (!$(iframe).hasClass('hide')) {\n    $(iframe).addClass('hide');\n  }\n  // ↓加载iframe\n  $(iframe).attr('src', url);\n  return submit;\n};\n\nconst bindEmbeddedBodySubmits = (embeddedBody) => {\n  if (!embeddedBody) throw new Error('bindEmbeddedSubmits的参数不能为空');\n  if (!$(embeddedBody).hasClass('card-body')) throw new Error('bindEmbeddedSubmits的参数应有class=\"card-body\"标记');\n  const embedded = $(embeddedBody).parents('.embedded-control');\n  if (!embedded) throw new Error('bindEmbeddedSubmits的参数应该有父元素带有标记class=\"embedded-control\"');\n  const submits = $(embeddedBody).find('button[name=submit]');\n  if (!submits) return false;\n  submits.each((index, submit) => {\n    $(submit).on('click', () => {\n      embeddedSubmit(submit);\n    });\n  });\n  return embeddedBody;\n};\n\nconst bindEmbeddedInput = (input) => {\n  if (!input || (input.tagName !== 'INPUT')) throw new Error('参数不是一个<input>');\n  const inputGroup = $(input).parent('.input-group')[0];\n  if (!inputGroup) throw new Error('这个<input>应该有父元素<div class=\"input-group\">');\n  const submit = $(inputGroup).find('button[name=submit]');\n  if (!submit) throw new Error('这个<input>应该有相邻元素<button name=\"submit\">');\n  $(input).on('keypress', (event) => {\n    if (isEnterKey(event)) { submit.click(); }\n  });\n  $(input).on('focus', () => {\n    const promise = visiteds.getAll()\n      .then((items) => {\n        const datalist = $('#urls');\n        datalist.html('');\n        items.forEach((item) => {\n          const option = $('<option>').attr('value', item.url);\n          datalist.append(option);\n        });\n        return items;\n      });\n    return promise;\n  });\n};\n\nconst bindEmbeddedBodyInputs = (embeddedBody) => {\n  if (!embeddedBody || !$(embeddedBody).hasClass('card-body')) throw new ReferenceError('initEmbeddedBody的参数应该是一个包含class=\"card-body\"的<div>元素');\n  const inputs = $(embeddedBody).find('input[type=text]');\n  if (!inputs) throw new Error('<div class=\"card-body\"> 内没有<input>');\n  inputs.each((index, input) => {\n    bindEmbeddedInput(input);\n  });\n  return embeddedBody;\n};\n\nconst initEmbeddedBody = (embedded) => {\n  if (!embedded || !$(embedded).hasClass('embedded-control')) throw new ReferenceError('initEmbeddedBody的参数应该是一个包含class=\"embedded-control\"的<div>元素');\n  let embeddedBody = $(embedded).find('.card-body')[0];\n  try {\n    if (!embeddedBody) throw new ReferenceError('embedded-control 没有 card-body');\n  } catch (error) {\n    if (error instanceof ReferenceError) {\n      embeddedBody = $('<div>').addClass('card-body entrance');\n      $(embedded).append(embeddedBody);\n    }\n  }\n  bindEmbeddedBodyIframes(embeddedBody);\n  bindEmbeddedBodySubmits(embeddedBody);\n  bindEmbeddedBodyInputs(embeddedBody);\n  return true;\n};\n\nexport default initEmbeddedBody;\nexport { embeddedSubmit, bindEmbeddedInput };\n","import { embeddedSubmit, bindEmbeddedInput } from './embeddedBody';\n\nconst bindRefreshButton = (embedded) => {\n  if (!embedded || !$(embedded).hasClass('embedded-control')) throw new Error('参数元素应该是有标记class=\"embedded-control\"');\n  const embeddedBody = $(embedded).find('.card-body')[0];\n  if (!embeddedBody) throw new Error('缺少card-body');\n  const iframeHolder = $(embeddedBody).find('.iframe-holder')[0];\n  if (!iframeHolder) throw new Error('缺少iframe-holder');\n  const iframe = $(iframeHolder).find('iframe')[0];\n  if (!iframe) throw new Error('缺少iframe');\n  const buttons = $(embedded).find('button[name=refresh]');\n  if (!buttons) return false;\n  buttons.each((index, button) => {\n    const icon = $(button).find('i')[0];\n    if (!icon || !$(icon).hasClass('fa-refresh')) throw new Error('没有refresh图标');\n    $(button).on('click', () => {\n      const src = $(iframe).attr('src');\n      if (src) {\n        if (!$(icon).hasClass('fa-pulse')) {\n          $(icon).addClass('fa-pulse');\n        }\n        $(iframe).on('load', () => {\n          $(icon).removeClass('fa-pulse');\n        });\n        $(iframe).attr('src', src);\n      }\n    });\n  });\n  return embedded;\n};\n\nconst bindHomePageButton = (embedded) => {\n  if (!embedded || !$(embedded).hasClass('embedded-control')) throw new Error('bindHomePageButton的参数元素应该是有标记class=\"embedded-control\"');\n  const embeddedBody = $(embedded).find('.card-body')[0];\n  if (!embeddedBody) throw new Error('缺少card-body');\n  const homepage = $(embeddedBody).find('.homepage')[0];\n  if (!homepage) throw new Error('缺少homepage');\n  const iframeHolder = $(embeddedBody).find('.iframe-holder')[0];\n  if (!iframeHolder) throw new Error('缺少iframe-holder');\n  const buttons = $(embedded).find('button[name=homepage]');\n  if (!buttons) return false;\n  buttons.each((index, button) => {\n    $(button).on('click', () => {\n      if (!$(iframeHolder).hasClass('hide')) { $(iframeHolder).addClass('hide'); }\n      $(homepage).removeClass('hide');\n    });\n  });\n  return embedded;\n};\n\nconst bindEmbeddedHeaderSubmit = (embedded) => {\n  if (!embedded || !$(embedded).hasClass('embedded-control')) throw new TypeError('参数元素应该有class=\"embedded-control\"标记');\n  const header = $(embedded).find('.card-header')[0];\n  if (!header) throw new TypeError('参数元素应包含header');\n  const inputGroup = $(embedded).find('.input-group')[0];\n  if (!header) throw new TypeError('参数元素应包含输入组');\n  const input = $(inputGroup).find('input[list=urls]')[0];\n  if (!input) throw new TypeError('参数元素应包含地址输入框');\n  const submit = $(inputGroup).find('button[name=submit]')[0];\n  if (!submit) throw new TypeError('参数元素应包含提交按钮');\n  $(submit).on('click', () => {\n    embeddedSubmit(submit);\n  });\n  bindEmbeddedInput(input);\n  return embedded;\n};\n\nconst initEmbeddedHeader = (embedded) => {\n  if (!embedded || !$(embedded).hasClass('embedded-control')) throw new Error('initEmbeddedHeader的参数元素应该是有标记class=\"embedded-control\"');\n  const embeddedHeader = $(embedded).find('card-header');\n  if (!embeddedHeader) throw new Error('<div class=\"embedded-control\">需要一个存在子元素<div class=\"card-header\">');\n  bindHomePageButton(embedded);\n  bindRefreshButton(embedded);\n  bindEmbeddedHeaderSubmit(embedded);\n  return true;\n};\n\nexport default initEmbeddedHeader;\n","\nimport initEmbeddedBody from './embeddedBody';\nimport initEmbeddedHeader from './embeddedHeader';\n\nconst isEmbedded = (embedded) => {\n  if (!embedded) throw new ReferenceError(`参数不能为 ${embedded}`);\n  if (embedded.nodeType !== 1 || embedded.tagName !== 'DIV') throw new ReferenceError(`${embedded} 不是一个<div>元素`);\n  if (!$(embedded).hasClass('embedded-control')) throw new ReferenceError(`${embedded} 缺少class=\"embedded-control\"标记`);\n  return true;\n};\n\nconst hasEmbeddedHeader = (embedded) => {\n  isEmbedded(embedded);\n  const embeddedHeader = $(embedded).find('card-header');\n  if (!embeddedHeader) throw new Error(`${embedded} 不包含<div class=\"card-header\">`);\n  return true;\n};\n\nconst hasEmbeddedBody = (embedded) => {\n  isEmbedded(embedded);\n  const embeddedBody = $(embedded).find('card-body');\n  if (!embeddedBody) throw new Error(`${embedded} 不包含<div class=\"card-body\">`);\n  return true;\n};\n\nconst bindEmbeddeds = () => {\n  const embeddeds = $('.embedded-control');\n  if (!embeddeds) return false;\n  $(embeddeds).each((index, embedded) => {\n    $(embedded).attr('id', `embedded-${index}`);\n    initEmbeddedBody(embedded);\n    initEmbeddedHeader(embedded);\n  });\n  return embeddeds;\n};\n\nexport default bindEmbeddeds;\nexport { isEmbedded, hasEmbeddedHeader, hasEmbeddedBody };\n\n","'use strict';\n\nimport { supportIframeHeight } from './supportIframeHeight';\nimport bindDrager from './drager';\nimport bindEmbeddeds from './embedded';\n\n$(document).ready(() => {\n  if (!document.querySelector) return false;\n  supportIframeHeight();\n  bindEmbeddeds();\n  bindDrager();\n  return true;\n});\n// drager.js 拖拽\n// embedded.js 主要控制\n// indexeddb/store.js 数据库indexedDB\n// supportIframeHeight 解决 iframe 的 height=\"100%\" 的问题\n// tool 一些计算结果的方法\n"]}